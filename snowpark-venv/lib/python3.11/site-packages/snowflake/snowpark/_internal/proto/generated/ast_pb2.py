# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ast.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tast.proto\x12\x03\x61st\x1a\x1egoogle/protobuf/wrappers.proto\"\x8b\x01\n\x12InternedValueTable\x12@\n\rstring_values\x18\x01 \x03(\x0b\x32).ast.InternedValueTable.StringValuesEntry\x1a\x33\n\x11StringValuesEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"$\n\tList_Expr\x12\x17\n\x04list\x18\x01 \x03(\x0b\x32\t.ast.Expr\"0\n\x0fList_SpDataType\x12\x1d\n\x04list\x18\x01 \x03(\x0b\x32\x0f.ast.SpDataType\"6\n\x12List_SpStructField\x12 \n\x04list\x18\x01 \x03(\x0b\x32\x12.ast.SpStructField\"\x1b\n\x0bList_String\x12\x0c\n\x04list\x18\x01 \x03(\t\"3\n\rMap_Expr_Expr\x12\"\n\x04list\x18\x01 \x03(\x0b\x32\x14.ast.Tuple_Expr_Expr\"7\n\x0fMap_String_Expr\x12$\n\x04list\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\"?\n\x0fTuple_Expr_Expr\x12\x15\n\x02_1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x15\n\x02_2\x18\x02 \x01(\x0b\x32\t.ast.Expr\"5\n\x10Tuple_Expr_Float\x12\x15\n\x02_1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\n\n\x02_2\x18\x02 \x01(\x01\"6\n\x11Tuple_String_Expr\x12\n\n\x02_1\x18\x01 \x01(\t\x12\x15\n\x02_2\x18\x02 \x01(\x0b\x32\t.ast.Expr\"2\n\x18Tuple_String_List_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x03(\t\"-\n\x13Tuple_String_String\x12\n\n\x02_1\x18\x01 \x01(\t\x12\n\n\x02_2\x18\x02 \x01(\t\"\xa4\x01\n\x08Language\x12*\n\rjava_language\x18\x01 \x01(\x0b\x32\x11.ast.JavaLanguageH\x00\x12.\n\x0fpython_language\x18\x02 \x01(\x0b\x32\x13.ast.PythonLanguageH\x00\x12,\n\x0escala_language\x18\x03 \x01(\x0b\x32\x12.ast.ScalaLanguageH\x00\x42\x0e\n\x0csealed_value\"/\n\x0ePythonLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version\".\n\rScalaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version\"-\n\x0cJavaLanguage\x12\x1d\n\x07version\x18\x01 \x01(\x0b\x32\x0c.ast.Version\"T\n\x0ePythonTimeZone\x12*\n\x04name\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x16\n\x0eoffset_seconds\x18\x02 \x01(\x03\"K\n\nSpCallable\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12#\n\x0bobject_name\x18\x03 \x01(\x0b\x32\x0e.ast.SpNameRef\"\x84\x01\n\x0fSpColumnAliasFn\x12\"\n\x18sp_column_alias_fn_alias\x18\x01 \x01(\x08H\x00\x12\x1f\n\x15sp_column_alias_fn_as\x18\x02 \x01(\x08H\x00\x12!\n\x17sp_column_alias_fn_name\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant\"\x83\x01\n\x0bSpColumnRef\x12\x37\n\x14sp_column_identifier\x18\x01 \x01(\x0b\x32\x17.ast.SpColumnIdentifierH\x00\x12+\n\x0esp_column_name\x18\x02 \x01(\x0b\x32\x11.ast.SpColumnNameH\x00\x42\x0e\n\x0csealed_value\"\"\n\x12SpColumnIdentifier\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1c\n\x0cSpColumnName\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xe4\x06\n\nSpDataType\x12)\n\rsp_array_type\x18\x01 \x01(\x0b\x32\x10.ast.SpArrayTypeH\x00\x12\x18\n\x0esp_binary_type\x18\x02 \x01(\x08H\x00\x12\x19\n\x0fsp_boolean_type\x18\x03 \x01(\x08H\x00\x12\x16\n\x0csp_byte_type\x18\x04 \x01(\x08H\x00\x12\x16\n\x0csp_date_type\x18\x05 \x01(\x08H\x00\x12-\n\x0fsp_decimal_type\x18\x06 \x01(\x0b\x32\x12.ast.SpDecimalTypeH\x00\x12\x18\n\x0esp_double_type\x18\x07 \x01(\x08H\x00\x12\x17\n\rsp_float_type\x18\x08 \x01(\x08H\x00\x12\x1b\n\x11sp_geography_type\x18\t \x01(\x08H\x00\x12\x1a\n\x10sp_geometry_type\x18\n \x01(\x08H\x00\x12\x19\n\x0fsp_integer_type\x18\x0b \x01(\x08H\x00\x12\x16\n\x0csp_long_type\x18\x0c \x01(\x08H\x00\x12%\n\x0bsp_map_type\x18\r \x01(\x0b\x32\x0e.ast.SpMapTypeH\x00\x12\x16\n\x0csp_null_type\x18\x0e \x01(\x08H\x00\x12?\n\x19sp_pandas_data_frame_type\x18\x0f \x01(\x0b\x32\x1a.ast.SpPandasDataFrameTypeH\x00\x12\x38\n\x15sp_pandas_series_type\x18\x10 \x01(\x0b\x32\x17.ast.SpPandasSeriesTypeH\x00\x12\x17\n\rsp_short_type\x18\x11 \x01(\x08H\x00\x12+\n\x0esp_string_type\x18\x12 \x01(\x0b\x32\x11.ast.SpStringTypeH\x00\x12-\n\x0fsp_struct_field\x18\x13 \x01(\x0b\x32\x12.ast.SpStructFieldH\x00\x12+\n\x0esp_struct_type\x18\x14 \x01(\x0b\x32\x11.ast.SpStructTypeH\x00\x12\x16\n\x0csp_time_type\x18\x15 \x01(\x08H\x00\x12\x31\n\x11sp_timestamp_type\x18\x16 \x01(\x0b\x32\x14.ast.SpTimestampTypeH\x00\x12\x19\n\x0fsp_variant_type\x18\x17 \x01(\x08H\x00\x12+\n\x0esp_vector_type\x18\x18 \x01(\x0b\x32\x11.ast.SpVectorTypeH\x00\x42\t\n\x07variant\">\n\x0bSpArrayType\x12\x12\n\nstructured\x18\x01 \x01(\x08\x12\x1b\n\x02ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\"1\n\rSpDecimalType\x12\x11\n\tprecision\x18\x01 \x01(\x03\x12\r\n\x05scale\x18\x02 \x01(\x03\"c\n\tSpMapType\x12\x1f\n\x06key_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x12\n\nstructured\x18\x02 \x01(\x08\x12!\n\x08value_ty\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType\";\n\x0cSpStringType\x12+\n\x06length\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\"r\n\rSpStructField\x12+\n\x11\x63olumn_identifier\x18\x01 \x01(\x0b\x32\x10.ast.SpColumnRef\x12\"\n\tdata_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x10\n\x08nullable\x18\x03 \x01(\x08\"K\n\x0cSpStructType\x12\'\n\x06\x66ields\x18\x01 \x01(\x0b\x32\x17.ast.List_SpStructField\x12\x12\n\nstructured\x18\x02 \x01(\x08\">\n\x0fSpTimestampType\x12+\n\ttime_zone\x18\x01 \x01(\x0b\x32\x18.ast.SpTimestampTimeZone\">\n\x0cSpVectorType\x12\x11\n\tdimension\x18\x01 \x01(\x03\x12\x1b\n\x02ty\x18\x02 \x01(\x0b\x32\x0f.ast.SpDataType\"4\n\x12SpPandasSeriesType\x12\x1e\n\x05\x65l_ty\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\"N\n\x15SpPandasDataFrameType\x12\x11\n\tcol_names\x18\x01 \x03(\t\x12\"\n\tcol_types\x18\x02 \x03(\x0b\x32\x0f.ast.SpDataType\"\xe1\x01\n\x0fSpDataframeData\x12<\n\x17sp_dataframe_data__list\x18\x01 \x01(\x0b\x32\x19.ast.SpDataframeData_ListH\x00\x12@\n\x19sp_dataframe_data__pandas\x18\x02 \x01(\x0b\x32\x1b.ast.SpDataframeData_PandasH\x00\x12>\n\x18sp_dataframe_data__tuple\x18\x03 \x01(\x0b\x32\x1a.ast.SpDataframeData_TupleH\x00\x42\x0e\n\x0csealed_value\"-\n\x14SpDataframeData_List\x12\x15\n\x02vs\x18\x01 \x03(\x0b\x32\t.ast.Expr\".\n\x15SpDataframeData_Tuple\x12\x15\n\x02vs\x18\x01 \x03(\x0b\x32\t.ast.Expr\"?\n\x16SpDataframeData_Pandas\x12%\n\x01v\x18\x01 \x01(\x0b\x32\x1a.ast.StagedPandasDataframe\"\xab\x01\n\x11SpDataframeSchema\x12@\n\x19sp_dataframe_schema__list\x18\x01 \x01(\x0b\x32\x1b.ast.SpDataframeSchema_ListH\x00\x12\x44\n\x1bsp_dataframe_schema__struct\x18\x02 \x01(\x0b\x32\x1d.ast.SpDataframeSchema_StructH\x00\x42\x0e\n\x0csealed_value\"$\n\x16SpDataframeSchema_List\x12\n\n\x02vs\x18\x01 \x03(\t\"8\n\x18SpDataframeSchema_Struct\x12\x1c\n\x01v\x18\x01 \x01(\x0b\x32\x11.ast.SpStructType\"}\n\rSpFlattenMode\x12\x1f\n\x15sp_flatten_mode_array\x18\x01 \x01(\x08H\x00\x12\x1e\n\x14sp_flatten_mode_both\x18\x02 \x01(\x08H\x00\x12 \n\x16sp_flatten_mode_object\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant\"\xa6\x02\n\nSpJoinType\x12\x1c\n\x12sp_join_type__asof\x18\x01 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__cross\x18\x02 \x01(\x08H\x00\x12\"\n\x18sp_join_type__full_outer\x18\x03 \x01(\x08H\x00\x12\x1d\n\x13sp_join_type__inner\x18\x04 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_anti\x18\x05 \x01(\x08H\x00\x12\"\n\x18sp_join_type__left_outer\x18\x06 \x01(\x08H\x00\x12!\n\x17sp_join_type__left_semi\x18\x07 \x01(\x08H\x00\x12#\n\x19sp_join_type__right_outer\x18\x08 \x01(\x08H\x00\x42\t\n\x07variant\"v\n\x06SpName\x12\'\n\x0csp_name_flat\x18\x01 \x01(\x0b\x32\x0f.ast.SpNameFlatH\x00\x12\x33\n\x12sp_name_structured\x18\x02 \x01(\x0b\x32\x15.ast.SpNameStructuredH\x00\x42\x0e\n\x0csealed_value\"\x1a\n\nSpNameFlat\x12\x0c\n\x04name\x18\x01 \x01(\t\" \n\x10SpNameStructured\x12\x0c\n\x04name\x18\x01 \x03(\t\"\x82\x01\n\x0bSpNullOrder\x12\x1f\n\x15sp_null_order_default\x18\x01 \x01(\x08H\x00\x12#\n\x19sp_null_order_nulls_first\x18\x02 \x01(\x08H\x00\x12\"\n\x18sp_null_order_nulls_last\x18\x03 \x01(\x08H\x00\x42\t\n\x07variant\"\x98\x01\n\x0cSpPivotValue\x12@\n\x19sp_pivot_value__dataframe\x18\x01 \x01(\x0b\x32\x1b.ast.SpPivotValue_DataframeH\x00\x12\x36\n\x14sp_pivot_value__expr\x18\x02 \x01(\x0b\x32\x16.ast.SpPivotValue_ExprH\x00\x42\x0e\n\x0csealed_value\")\n\x11SpPivotValue_Expr\x12\x14\n\x01v\x18\x01 \x01(\x0b\x32\t.ast.Expr\"8\n\x16SpPivotValue_Dataframe\x12\x1e\n\x01v\x18\x01 \x01(\x0b\x32\x13.ast.SpDataframeRef\"\xc0\x01\n\nSpSaveMode\x12\x1d\n\x13sp_save_mode_append\x18\x01 \x01(\x08H\x00\x12&\n\x1csp_save_mode_error_if_exists\x18\x02 \x01(\x08H\x00\x12\x1d\n\x13sp_save_mode_ignore\x18\x03 \x01(\x08H\x00\x12 \n\x16sp_save_mode_overwrite\x18\x04 \x01(\x08H\x00\x12\x1f\n\x15sp_save_mode_truncate\x18\x05 \x01(\x08H\x00\x42\t\n\x07variant\"P\n\x0eSpTableVariant\x12\x1a\n\x10sp_session_table\x18\x01 \x01(\x08H\x00\x12\x17\n\rsp_table_init\x18\x02 \x01(\x08H\x00\x42\t\n\x07variant\"\xbb\x01\n\x13SpTimestampTimeZone\x12(\n\x1esp_timestamp_time_zone_default\x18\x01 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ltz\x18\x02 \x01(\x08H\x00\x12$\n\x1asp_timestamp_time_zone_ntz\x18\x03 \x01(\x08H\x00\x12#\n\x19sp_timestamp_time_zone_tz\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant\"\xaa\x02\n\x18SpWindowRelativePosition\x12\x32\n(sp_window_relative_position__current_row\x18\x01 \x01(\x08H\x00\x12W\n%sp_window_relative_position__position\x18\x02 \x01(\x0b\x32&.ast.SpWindowRelativePosition_PositionH\x00\x12:\n0sp_window_relative_position__unbounded_following\x18\x03 \x01(\x08H\x00\x12:\n0sp_window_relative_position__unbounded_preceding\x18\x04 \x01(\x08H\x00\x42\t\n\x07variant\"9\n!SpWindowRelativePosition_Position\x12\x14\n\x01n\x18\x01 \x01(\x0b\x32\t.ast.Expr\"k\n\x0bSrcPosition\x12\x12\n\nend_column\x18\x01 \x01(\x03\x12\x10\n\x08\x65nd_line\x18\x02 \x01(\x03\x12\x0c\n\x04\x66ile\x18\x03 \x01(\x05\x12\x14\n\x0cstart_column\x18\x04 \x01(\x03\x12\x12\n\nstart_line\x18\x05 \x01(\x03\";\n\x15StagedPandasDataframe\x12\"\n\ntemp_table\x18\x01 \x01(\x0b\x32\x0e.ast.SpNameRef\"\x84\x01\n\nUdtfSchema\x12\x33\n\x12udtf_schema__names\x18\x01 \x01(\x0b\x32\x15.ast.UdtfSchema_NamesH\x00\x12\x31\n\x11udtf_schema__type\x18\x02 \x01(\x0b\x32\x14.ast.UdtfSchema_TypeH\x00\x42\x0e\n\x0csealed_value\"7\n\x0fUdtfSchema_Type\x12$\n\x0breturn_type\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\"\"\n\x10UdtfSchema_Names\x12\x0e\n\x06schema\x18\x01 \x03(\t\"\x1a\n\x05VarId\x12\x11\n\tbitfield1\x18\x01 \x01(\x04\"E\n\x07Version\x12\r\n\x05label\x18\x01 \x01(\t\x12\r\n\x05major\x18\x02 \x01(\x03\x12\r\n\x05minor\x18\x03 \x01(\x03\x12\r\n\x05patch\x18\x04 \x01(\x03\"\xd0\x03\n\x11\x41\x62stractExtension\x12\x43\n\x1dtrait_abstract_extension_expr\x18\x01 \x01(\x0b\x32\x1a.ast.AbstractExtensionExprH\x00\x12?\n\x18\x65xtension_dataframe_expr\x18\x02 \x01(\x0b\x32\x1b.ast.ExtensionDataframeExprH\x00\x12.\n\x0f\x65xtension_error\x18\x03 \x01(\x0b\x32\x13.ast.ExtensionErrorH\x00\x12\x39\n\x15\x65xtension_eval_result\x18\x04 \x01(\x0b\x32\x18.ast.ExtensionEvalResultH\x00\x12,\n\x0e\x65xtension_expr\x18\x05 \x01(\x0b\x32\x12.ast.ExtensionExprH\x00\x12\x63\n+extension_relational_grouped_dataframe_expr\x18\x06 \x01(\x0b\x32,.ast.ExtensionRelationalGroupedDataframeExprH\x00\x12,\n\x0e\x65xtension_stmt\x18\x07 \x01(\x0b\x32\x12.ast.ExtensionStmtH\x00\x42\t\n\x07variant\"\xf6\x01\n\x15\x41\x62stractExtensionExpr\x12?\n\x18\x65xtension_dataframe_expr\x18\x01 \x01(\x0b\x32\x1b.ast.ExtensionDataframeExprH\x00\x12,\n\x0e\x65xtension_expr\x18\x02 \x01(\x0b\x32\x12.ast.ExtensionExprH\x00\x12\x63\n+extension_relational_grouped_dataframe_expr\x18\x03 \x01(\x0b\x32,.ast.ExtensionRelationalGroupedDataframeExprH\x00\x42\t\n\x07variant\"\xf6\x01\n\x15\x41\x62stractTruncatedExpr\x12?\n\x18truncated_dataframe_expr\x18\x01 \x01(\x0b\x32\x1b.ast.TruncatedDataframeExprH\x00\x12,\n\x0etruncated_expr\x18\x02 \x01(\x0b\x32\x12.ast.TruncatedExprH\x00\x12\x63\n+truncated_relational_grouped_dataframe_expr\x18\x03 \x01(\x0b\x32,.ast.TruncatedRelationalGroupedDataframeExprH\x00\x42\t\n\x07variant\"T\n\x03\x41\x64\x64\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x03\x41nd\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8f\x01\n\tApplyExpr\x12\x1a\n\x02\x66n\x18\x01 \x01(\x0b\x32\x0e.ast.FnRefExpr\x12*\n\nnamed_args\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x1b\n\x08pos_args\x18\x03 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"x\n\x06\x41ssign\x12\x17\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12,\n\x06symbol\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x0b\n\x03uid\x18\x03 \x01(\x03\x12\x1a\n\x06var_id\x18\x04 \x01(\x0b\x32\n.ast.VarId\"\x84\x01\n\rBigDecimalVal\x12\r\n\x05scale\x18\x01 \x01(\x03\x12-\n\x07special\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0eunscaled_value\x18\x04 \x01(\x0c\"5\n\tBigIntVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c\"\xc6\x03\n\x05\x42inOp\x12\x17\n\x03\x61\x64\x64\x18\x01 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x02 \x01(\x0b\x32\x08.ast.AndH\x00\x12\x1e\n\x07\x62it_and\x18\x03 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x04 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x05 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12\x17\n\x03\x64iv\x18\x06 \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x07 \x01(\x0b\x32\x07.ast.EqH\x00\x12\x17\n\x03geq\x18\x08 \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\t \x01(\x0b\x32\x07.ast.GtH\x00\x12\x17\n\x03leq\x18\n \x01(\x0b\x32\x08.ast.LeqH\x00\x12\x15\n\x02lt\x18\x0b \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18\x0c \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18\r \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neq\x18\x0e \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x15\n\x02or\x18\x0f \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03pow\x18\x10 \x01(\x0b\x32\x08.ast.PowH\x00\x12\x17\n\x03sub\x18\x11 \x01(\x0b\x32\x08.ast.SubH\x00\x42\t\n\x07variant\"5\n\tBinaryVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x0c\"W\n\x06\x42itAnd\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"V\n\x05\x42itOr\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"W\n\x06\x42itXor\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"3\n\x07\x42oolVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x08\"H\n\tBuiltinFn\x12\x1c\n\x04name\x18\x01 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x15\x43\x61llTableFunctionExpr\x12\x1c\n\x04name\x18\x01 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb8\x04\n\x05\x43onst\x12-\n\x0f\x62ig_decimal_val\x18\x01 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x02 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x03 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x04 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12&\n\x0b\x66loat64_val\x18\x05 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\"\n\tint64_val\x18\x06 \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08null_val\x18\x07 \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fpython_date_val\x18\x08 \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\t \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\n \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12,\n\x0eredacted_const\x18\x0b \x01(\x0b\x32\x12.ast.RedactedConstH\x00\x12-\n\x0fsp_datatype_val\x18\x0c \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12$\n\nstring_val\x18\r \x01(\x0b\x32\x0e.ast.StringValH\x00\x42\t\n\x07variant\"T\n\x03\x44iv\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"S\n\x02\x45q\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8a\x01\n\x05\x45rror\x12.\n\x0f\x65xtension_error\x18\x01 \x01(\x0b\x32\x13.ast.ExtensionErrorH\x00\x12\x46\n\x1csession_reset_required_error\x18\x02 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant\"/\n\x04\x45val\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\"P\n\x06\x45valOk\x12\x1d\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x0f.ast.EvalResult\x12\x0b\n\x03uid\x18\x02 \x01(\x03\x12\x1a\n\x06var_id\x18\x03 \x01(\x0b\x32\n.ast.VarId\"\xf2\x05\n\nEvalResult\x12!\n\x0btrait_const\x18\x01 \x01(\x0b\x32\n.ast.ConstH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x02 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x03 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x04 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12 \n\x08\x62ool_val\x18\x05 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12\x39\n\x15\x65xtension_eval_result\x18\x06 \x01(\x0b\x32\x18.ast.ExtensionEvalResultH\x00\x12&\n\x0b\x66loat64_val\x18\x07 \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\"\n\tint64_val\x18\x08 \x01(\x0b\x32\r.ast.Int64ValH\x00\x12 \n\x08null_val\x18\t \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fpython_date_val\x18\n \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\x0b \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x0c \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12,\n\x0eredacted_const\x18\r \x01(\x0b\x32\x12.ast.RedactedConstH\x00\x12-\n\x0fsf_query_result\x18\x0e \x01(\x0b\x32\x12.ast.SfQueryResultH\x00\x12&\n\x0bshow_result\x18\x0f \x01(\x0b\x32\x0f.ast.ShowResultH\x00\x12-\n\x0fsp_datatype_val\x18\x10 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12$\n\nstring_val\x18\x11 \x01(\x0b\x32\x0e.ast.StringValH\x00\x42\t\n\x07variant\"\xecP\n\x04\x45xpr\x12\x43\n\x1dtrait_abstract_extension_expr\x18\x01 \x01(\x0b\x32\x1a.ast.AbstractExtensionExprH\x00\x12\x43\n\x1dtrait_abstract_truncated_expr\x18\x02 \x01(\x0b\x32\x1a.ast.AbstractTruncatedExprH\x00\x12\"\n\x0ctrait_bin_op\x18\x03 \x01(\x0b\x32\n.ast.BinOpH\x00\x12!\n\x0btrait_const\x18\x04 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x30\n\x14trait_fn_id_ref_expr\x18\x05 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x06 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12+\n\x11trait_fn_ref_expr\x18\x07 \x01(\x0b\x32\x0e.ast.FnRefExprH\x00\x12-\n\x12trait_sp_column_fn\x18\x08 \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\t \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\n \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12\x37\n\x17trait_sp_matched_clause\x18\x0b \x01(\x0b\x32\x14.ast.SpMatchedClauseH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0c \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12/\n\x13trait_sp_write_file\x18\r \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12&\n\x0etrait_unary_op\x18\x0e \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x0f \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x10 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x11 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x12 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x13 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x14 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x15 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x16 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x17 \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x18 \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12$\n\nbuiltin_fn\x18\x19 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12>\n\x18\x63\x61ll_table_function_expr\x18\x1a \x01(\x0b\x32\x1a.ast.CallTableFunctionExprH\x00\x12\x17\n\x03\x64iv\x18\x1b \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1c \x01(\x0b\x32\x07.ast.EqH\x00\x12?\n\x18\x65xtension_dataframe_expr\x18\x1d \x01(\x0b\x32\x1b.ast.ExtensionDataframeExprH\x00\x12,\n\x0e\x65xtension_expr\x18\x1e \x01(\x0b\x32\x12.ast.ExtensionExprH\x00\x12\x63\n+extension_relational_grouped_dataframe_expr\x18\x1f \x01(\x0b\x32,.ast.ExtensionRelationalGroupedDataframeExprH\x00\x12&\n\x0b\x66loat64_val\x18  \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x17\n\x03geq\x18! \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18\" \x01(\x0b\x32\x07.ast.GtH\x00\x12=\n\x18indirect_table_fn_id_ref\x18# \x01(\x0b\x32\x19.ast.IndirectTableFnIdRefH\x00\x12\x41\n\x1aindirect_table_fn_name_ref\x18$ \x01(\x0b\x32\x1b.ast.IndirectTableFnNameRefH\x00\x12\"\n\tint64_val\x18% \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18& \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18\' \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18( \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18) \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18* \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18+ \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18, \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x17\n\x03not\x18- \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18. \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fobject_get_item\x18/ \x01(\x0b\x32\x12.ast.ObjectGetItemH\x00\x12\x15\n\x02or\x18\x30 \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03pow\x18\x31 \x01(\x0b\x32\x08.ast.PowH\x00\x12-\n\x0fpython_date_val\x18\x32 \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\x33 \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x34 \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12,\n\x0eredacted_const\x18\x35 \x01(\x0b\x32\x12.ast.RedactedConstH\x00\x12%\n\x0bseq_map_val\x18\x36 \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12-\n\x0fsp_column_alias\x18\x37 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x38 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x39 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18: \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18; \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x34\n\x13sp_column_case_when\x18< \x01(\x0b\x32\x15.ast.SpColumnCaseWhenH\x00\x12+\n\x0esp_column_cast\x18= \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18> \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18? \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18@ \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12\'\n\x0csp_column_in\x18\x41 \x01(\x0b\x32\x0f.ast.SpColumnInH\x00\x12\x37\n\x15sp_column_is_not_null\x18\x42 \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18\x43 \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_over\x18\x44 \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12\x32\n\x12sp_column_sql_expr\x18\x45 \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12>\n\x18sp_column_string_collate\x18\x46 \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18G \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18H \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18I \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18J \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18K \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18L \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18M \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18N \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\x35\n\x13sp_create_dataframe\x18O \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18P \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18Q \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n\"sp_dataframe_analytics_compute_lag\x18R \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18S \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18T \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18U \x01(\x0b\x32\".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18V \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12@\n\x19sp_dataframe_cache_result\x18W \x01(\x0b\x32\x1b.ast.SpDataframeCacheResultH\x00\x12/\n\x10sp_dataframe_col\x18X \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12\x37\n\x14sp_dataframe_collect\x18Y \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x45\n\x1csp_dataframe_copy_into_table\x18Z \x01(\x0b\x32\x1d.ast.SpDataframeCopyIntoTableH\x00\x12\x33\n\x12sp_dataframe_count\x18[ \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12\x63\n,sp_dataframe_create_or_replace_dynamic_table\x18\\ \x01(\x0b\x32+.ast.SpDataframeCreateOrReplaceDynamicTableH\x00\x12R\n#sp_dataframe_create_or_replace_view\x18] \x01(\x0b\x32#.ast.SpDataframeCreateOrReplaceViewH\x00\x12<\n\x17sp_dataframe_cross_join\x18^ \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18_ \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_describe\x18` \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\x61 \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18\x62 \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18\x63 \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18\x64 \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x65 \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x66 \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18g \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12\x38\n\x15sp_dataframe_group_by\x18h \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18i \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12;\n\x16sp_dataframe_intersect\x18j \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x31\n\x11sp_dataframe_join\x18k \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12M\n sp_dataframe_join_table_function\x18l \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12\x33\n\x12sp_dataframe_limit\x18m \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x45\n\x1csp_dataframe_na_drop__python\x18n \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x43\n\x1bsp_dataframe_na_drop__scala\x18o \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18p \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18q \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18r \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x33\n\x12sp_dataframe_pivot\x18s \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12@\n\x19sp_dataframe_random_split\x18t \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18u \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18v \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x35\n\x13sp_dataframe_rollup\x18w \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12\x35\n\x13sp_dataframe_sample\x18x \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18y \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x42\n\x1asp_dataframe_select__exprs\x18z \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x31\n\x11sp_dataframe_show\x18{ \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x31\n\x11sp_dataframe_sort\x18| \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12O\n!sp_dataframe_stat_approx_quantile\x18} \x01(\x0b\x32\".ast.SpDataframeStatApproxQuantileH\x00\x12:\n\x16sp_dataframe_stat_corr\x18~ \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x38\n\x15sp_dataframe_stat_cov\x18\x7f \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x44\n\x1bsp_dataframe_stat_cross_tab\x18\x80\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x44\n\x1bsp_dataframe_stat_sample_by\x18\x81\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x82\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12J\n\x1esp_dataframe_to_local_iterator\x18\x83\x01 \x01(\x0b\x32\x1f.ast.SpDataframeToLocalIteratorH\x00\x12;\n\x16sp_dataframe_to_pandas\x18\x84\x01 \x01(\x0b\x32\x18.ast.SpDataframeToPandasH\x00\x12J\n\x1esp_dataframe_to_pandas_batches\x18\x85\x01 \x01(\x0b\x32\x1f.ast.SpDataframeToPandasBatchesH\x00\x12\x34\n\x12sp_dataframe_union\x18\x86\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x87\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x88\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x89\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x38\n\x14sp_dataframe_unpivot\x18\x8a\x01 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12?\n\x18sp_dataframe_with_column\x18\x8b\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12N\n sp_dataframe_with_column_renamed\x18\x8c\x01 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x8d\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_dataframe_write\x18\x8e\x01 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12.\n\x0fsp_datatype_val\x18\x8f\x01 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12%\n\nsp_flatten\x18\x90\x01 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12\"\n\tsp_fn_ref\x18\x91\x01 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12)\n\x0csp_generator\x18\x92\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12\x30\n\x10sp_grouping_sets\x18\x93\x01 \x01(\x0b\x32\x13.ast.SpGroupingSetsH\x00\x12S\n#sp_merge_delete_when_matched_clause\x18\x94\x01 \x01(\x0b\x32#.ast.SpMergeDeleteWhenMatchedClauseH\x00\x12Z\n\'sp_merge_insert_when_not_matched_clause\x18\x95\x01 \x01(\x0b\x32&.ast.SpMergeInsertWhenNotMatchedClauseH\x00\x12S\n#sp_merge_update_when_matched_clause\x18\x96\x01 \x01(\x0b\x32#.ast.SpMergeUpdateWhenMatchedClauseH\x00\x12!\n\x08sp_range\x18\x97\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\x98\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\x99\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\x9a\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\x9b\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\x9c\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\x9d\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\x9e\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12T\n#sp_relational_grouped_dataframe_agg\x18\x9f\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12j\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\xa0\x01 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xa1\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_pivot\x18\xa2\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12T\n#sp_relational_grouped_dataframe_ref\x18\xa3\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x12\x1d\n\x06sp_row\x18\xa4\x01 \x01(\x0b\x32\n.ast.SpRowH\x00\x12\x41\n\x19sp_session_table_function\x18\xa5\x01 \x01(\x0b\x32\x1b.ast.SpSessionTableFunctionH\x00\x12\x1d\n\x06sp_sql\x18\xa6\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12!\n\x08sp_table\x18\xa7\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12.\n\x0fsp_table_delete\x18\xa8\x01 \x01(\x0b\x32\x12.ast.SpTableDeleteH\x00\x12\x35\n\x13sp_table_drop_table\x18\xa9\x01 \x01(\x0b\x32\x15.ast.SpTableDropTableH\x00\x12:\n\x16sp_table_fn_call_alias\x18\xaa\x01 \x01(\x0b\x32\x17.ast.SpTableFnCallAliasH\x00\x12\x38\n\x15sp_table_fn_call_over\x18\xab\x01 \x01(\x0b\x32\x16.ast.SpTableFnCallOverH\x00\x12,\n\x0esp_table_merge\x18\xac\x01 \x01(\x0b\x32\x11.ast.SpTableMergeH\x00\x12.\n\x0fsp_table_sample\x18\xad\x01 \x01(\x0b\x32\x12.ast.SpTableSampleH\x00\x12.\n\x0fsp_table_update\x18\xae\x01 \x01(\x0b\x32\x12.ast.SpTableUpdateH\x00\x12\x39\n\x15sp_to_snowpark_pandas\x18\xaf\x01 \x01(\x0b\x32\x17.ast.SpToSnowparkPandasH\x00\x12\x44\n\x1bsp_write_copy_into_location\x18\xb0\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12(\n\x0csp_write_csv\x18\xb1\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xb2\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12.\n\x0fsp_write_pandas\x18\xb3\x01 \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x12\x30\n\x10sp_write_parquet\x18\xb4\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xb5\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12\x31\n\x10stored_procedure\x18\xb6\x01 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12%\n\nstring_val\x18\xb7\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xb8\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12@\n\x18truncated_dataframe_expr\x18\xb9\x01 \x01(\x0b\x32\x1b.ast.TruncatedDataframeExprH\x00\x12-\n\x0etruncated_expr\x18\xba\x01 \x01(\x0b\x32\x12.ast.TruncatedExprH\x00\x12\x64\n+truncated_relational_grouped_dataframe_expr\x18\xbb\x01 \x01(\x0b\x32,.ast.TruncatedRelationalGroupedDataframeExprH\x00\x12#\n\ttuple_val\x18\xbc\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x12\x1a\n\x04udaf\x18\xbd\x01 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x18\n\x03udf\x18\xbe\x01 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x1a\n\x04udtf\x18\xbf\x01 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant\"8\n\x0b\x45xprArgList\x12\x17\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x10\n\x08variadic\x18\x02 \x01(\x08\"l\n\x16\x45xtensionDataframeExpr\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"n\n\x0e\x45xtensionError\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x0b\n\x03uid\x18\x03 \x01(\x03\x12\x1a\n\x06var_id\x18\x04 \x01(\x0b\x32\n.ast.VarId\"J\n\x13\x45xtensionEvalResult\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\"c\n\rExtensionExpr\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"}\n\'ExtensionRelationalGroupedDataframeExpr\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"D\n\rExtensionStmt\x12%\n\x05\x61ttrs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x0c\n\x04kind\x18\x02 \x01(\t\"6\n\nFloat64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x01\"z\n\x0b\x46nIdRefExpr\x12=\n\x18indirect_table_fn_id_ref\x18\x01 \x01(\x0b\x32\x19.ast.IndirectTableFnIdRefH\x00\x12!\n\tsp_fn_ref\x18\x02 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x42\t\n\x07variant\"\xc4\x02\n\rFnNameRefExpr\x12$\n\nbuiltin_fn\x18\x01 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12>\n\x18\x63\x61ll_table_function_expr\x18\x02 \x01(\x0b\x32\x1a.ast.CallTableFunctionExprH\x00\x12\x41\n\x1aindirect_table_fn_name_ref\x18\x03 \x01(\x0b\x32\x1b.ast.IndirectTableFnNameRefH\x00\x12\x30\n\x10stored_procedure\x18\x04 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12\x19\n\x04udaf\x18\x05 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x17\n\x03udf\x18\x06 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x19\n\x04udtf\x18\x07 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant\"\x8a\x04\n\tFnRefExpr\x12\x30\n\x14trait_fn_id_ref_expr\x18\x01 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x02 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12$\n\nbuiltin_fn\x18\x03 \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12>\n\x18\x63\x61ll_table_function_expr\x18\x04 \x01(\x0b\x32\x1a.ast.CallTableFunctionExprH\x00\x12=\n\x18indirect_table_fn_id_ref\x18\x05 \x01(\x0b\x32\x19.ast.IndirectTableFnIdRefH\x00\x12\x41\n\x1aindirect_table_fn_name_ref\x18\x06 \x01(\x0b\x32\x1b.ast.IndirectTableFnNameRefH\x00\x12!\n\tsp_fn_ref\x18\x07 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12\x30\n\x10stored_procedure\x18\x08 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12\x19\n\x04udaf\x18\t \x01(\x0b\x32\t.ast.UdafH\x00\x12\x17\n\x03udf\x18\n \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x19\n\x04udtf\x18\x0b \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant\"T\n\x03Geq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"S\n\x02Gt\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x94X\n\x0eHasSrcPosition\x12\x43\n\x1dtrait_abstract_extension_expr\x18\x01 \x01(\x0b\x32\x1a.ast.AbstractExtensionExprH\x00\x12\x43\n\x1dtrait_abstract_truncated_expr\x18\x02 \x01(\x0b\x32\x1a.ast.AbstractTruncatedExprH\x00\x12\"\n\x0ctrait_bin_op\x18\x03 \x01(\x0b\x32\n.ast.BinOpH\x00\x12!\n\x0btrait_const\x18\x04 \x01(\x0b\x32\n.ast.ConstH\x00\x12\x1f\n\ntrait_expr\x18\x05 \x01(\x0b\x32\t.ast.ExprH\x00\x12\x30\n\x14trait_fn_id_ref_expr\x18\x06 \x01(\x0b\x32\x10.ast.FnIdRefExprH\x00\x12\x34\n\x16trait_fn_name_ref_expr\x18\x07 \x01(\x0b\x32\x12.ast.FnNameRefExprH\x00\x12+\n\x11trait_fn_ref_expr\x18\x08 \x01(\x0b\x32\x0e.ast.FnRefExprH\x00\x12-\n\x12trait_sp_column_fn\x18\t \x01(\x0b\x32\x0f.ast.SpColumnFnH\x00\x12\x37\n\x17trait_sp_dataframe_expr\x18\n \x01(\x0b\x32\x14.ast.SpDataframeExprH\x00\x12;\n\x19trait_sp_dataframe_reader\x18\x0b \x01(\x0b\x32\x16.ast.SpDataframeReaderH\x00\x12;\n\x19trait_sp_dataframe_writer\x18\x0c \x01(\x0b\x32\x16.ast.SpDataframeWriterH\x00\x12\x37\n\x17trait_sp_matched_clause\x18\r \x01(\x0b\x32\x14.ast.SpMatchedClauseH\x00\x12[\n*trait_sp_relational_grouped_dataframe_expr\x18\x0e \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExprH\x00\x12:\n\x19trait_sp_window_spec_expr\x18\x0f \x01(\x0b\x32\x15.ast.SpWindowSpecExprH\x00\x12/\n\x13trait_sp_write_file\x18\x10 \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12&\n\x0etrait_unary_op\x18\x11 \x01(\x0b\x32\x0c.ast.UnaryOpH\x00\x12\x17\n\x03\x61\x64\x64\x18\x12 \x01(\x0b\x32\x08.ast.AddH\x00\x12\x17\n\x03\x61nd\x18\x13 \x01(\x0b\x32\x08.ast.AndH\x00\x12$\n\napply_expr\x18\x14 \x01(\x0b\x32\x0e.ast.ApplyExprH\x00\x12-\n\x0f\x62ig_decimal_val\x18\x15 \x01(\x0b\x32\x12.ast.BigDecimalValH\x00\x12%\n\x0b\x62ig_int_val\x18\x16 \x01(\x0b\x32\x0e.ast.BigIntValH\x00\x12$\n\nbinary_val\x18\x17 \x01(\x0b\x32\x0e.ast.BinaryValH\x00\x12\x1e\n\x07\x62it_and\x18\x18 \x01(\x0b\x32\x0b.ast.BitAndH\x00\x12\x1c\n\x06\x62it_or\x18\x19 \x01(\x0b\x32\n.ast.BitOrH\x00\x12\x1e\n\x07\x62it_xor\x18\x1a \x01(\x0b\x32\x0b.ast.BitXorH\x00\x12 \n\x08\x62ool_val\x18\x1b \x01(\x0b\x32\x0c.ast.BoolValH\x00\x12$\n\nbuiltin_fn\x18\x1c \x01(\x0b\x32\x0e.ast.BuiltinFnH\x00\x12>\n\x18\x63\x61ll_table_function_expr\x18\x1d \x01(\x0b\x32\x1a.ast.CallTableFunctionExprH\x00\x12\x17\n\x03\x64iv\x18\x1e \x01(\x0b\x32\x08.ast.DivH\x00\x12\x15\n\x02\x65q\x18\x1f \x01(\x0b\x32\x07.ast.EqH\x00\x12?\n\x18\x65xtension_dataframe_expr\x18  \x01(\x0b\x32\x1b.ast.ExtensionDataframeExprH\x00\x12,\n\x0e\x65xtension_expr\x18! \x01(\x0b\x32\x12.ast.ExtensionExprH\x00\x12\x63\n+extension_relational_grouped_dataframe_expr\x18\" \x01(\x0b\x32,.ast.ExtensionRelationalGroupedDataframeExprH\x00\x12&\n\x0b\x66loat64_val\x18# \x01(\x0b\x32\x0f.ast.Float64ValH\x00\x12\x17\n\x03geq\x18$ \x01(\x0b\x32\x08.ast.GeqH\x00\x12\x15\n\x02gt\x18% \x01(\x0b\x32\x07.ast.GtH\x00\x12=\n\x18indirect_table_fn_id_ref\x18& \x01(\x0b\x32\x19.ast.IndirectTableFnIdRefH\x00\x12\x41\n\x1aindirect_table_fn_name_ref\x18\' \x01(\x0b\x32\x1b.ast.IndirectTableFnNameRefH\x00\x12\"\n\tint64_val\x18( \x01(\x0b\x32\r.ast.Int64ValH\x00\x12\x17\n\x03leq\x18) \x01(\x0b\x32\x08.ast.LeqH\x00\x12 \n\x08list_val\x18* \x01(\x0b\x32\x0c.ast.ListValH\x00\x12\x15\n\x02lt\x18+ \x01(\x0b\x32\x07.ast.LtH\x00\x12\x17\n\x03mod\x18, \x01(\x0b\x32\x08.ast.ModH\x00\x12\x17\n\x03mul\x18- \x01(\x0b\x32\x08.ast.MulH\x00\x12\x17\n\x03neg\x18. \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03neq\x18/ \x01(\x0b\x32\x08.ast.NeqH\x00\x12\x17\n\x03not\x18\x30 \x01(\x0b\x32\x08.ast.NotH\x00\x12 \n\x08null_val\x18\x31 \x01(\x0b\x32\x0c.ast.NullValH\x00\x12-\n\x0fobject_get_item\x18\x32 \x01(\x0b\x32\x12.ast.ObjectGetItemH\x00\x12\x15\n\x02or\x18\x33 \x01(\x0b\x32\x07.ast.OrH\x00\x12\x17\n\x03pow\x18\x34 \x01(\x0b\x32\x08.ast.PowH\x00\x12-\n\x0fpython_date_val\x18\x35 \x01(\x0b\x32\x12.ast.PythonDateValH\x00\x12-\n\x0fpython_time_val\x18\x36 \x01(\x0b\x32\x12.ast.PythonTimeValH\x00\x12\x37\n\x14python_timestamp_val\x18\x37 \x01(\x0b\x32\x17.ast.PythonTimestampValH\x00\x12,\n\x0eredacted_const\x18\x38 \x01(\x0b\x32\x12.ast.RedactedConstH\x00\x12%\n\x0bseq_map_val\x18\x39 \x01(\x0b\x32\x0e.ast.SeqMapValH\x00\x12\'\n\x0csp_case_expr\x18: \x01(\x0b\x32\x0f.ast.SpCaseExprH\x00\x12-\n\x0fsp_column_alias\x18; \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18< \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18= \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18> \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18? \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12\x34\n\x13sp_column_case_when\x18@ \x01(\x0b\x32\x15.ast.SpColumnCaseWhenH\x00\x12+\n\x0esp_column_cast\x18\x41 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18\x42 \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18\x43 \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\x36\n\x14sp_column_equal_null\x18\x44 \x01(\x0b\x32\x16.ast.SpColumnEqualNullH\x00\x12\'\n\x0csp_column_in\x18\x45 \x01(\x0b\x32\x0f.ast.SpColumnInH\x00\x12\x37\n\x15sp_column_is_not_null\x18\x46 \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18G \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_over\x18H \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12\x32\n\x12sp_column_sql_expr\x18I \x01(\x0b\x32\x14.ast.SpColumnSqlExprH\x00\x12>\n\x18sp_column_string_collate\x18J \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18K \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18L \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18M \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18N \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18O \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18P \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18Q \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18R \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x12\x35\n\x13sp_create_dataframe\x18S \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18T \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18U \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n\"sp_dataframe_analytics_compute_lag\x18V \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18W \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18X \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18Y \x01(\x0b\x32\".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18Z \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12@\n\x19sp_dataframe_cache_result\x18[ \x01(\x0b\x32\x1b.ast.SpDataframeCacheResultH\x00\x12/\n\x10sp_dataframe_col\x18\\ \x01(\x0b\x32\x13.ast.SpDataframeColH\x00\x12\x37\n\x14sp_dataframe_collect\x18] \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x45\n\x1csp_dataframe_copy_into_table\x18^ \x01(\x0b\x32\x1d.ast.SpDataframeCopyIntoTableH\x00\x12\x33\n\x12sp_dataframe_count\x18_ \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12\x63\n,sp_dataframe_create_or_replace_dynamic_table\x18` \x01(\x0b\x32+.ast.SpDataframeCreateOrReplaceDynamicTableH\x00\x12R\n#sp_dataframe_create_or_replace_view\x18\x61 \x01(\x0b\x32#.ast.SpDataframeCreateOrReplaceViewH\x00\x12<\n\x17sp_dataframe_cross_join\x18\x62 \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x31\n\x11sp_dataframe_cube\x18\x63 \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x39\n\x15sp_dataframe_describe\x18\x64 \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\x65 \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18\x66 \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18g \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18h \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18i \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18j \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18k \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12\x38\n\x15sp_dataframe_group_by\x18l \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18m \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12;\n\x16sp_dataframe_intersect\x18n \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x31\n\x11sp_dataframe_join\x18o \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12M\n sp_dataframe_join_table_function\x18p \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12\x33\n\x12sp_dataframe_limit\x18q \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x45\n\x1csp_dataframe_na_drop__python\x18r \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x43\n\x1bsp_dataframe_na_drop__scala\x18s \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18t \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18u \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18v \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12\x33\n\x12sp_dataframe_pivot\x18w \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12@\n\x19sp_dataframe_random_split\x18x \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12>\n\x18sp_dataframe_reader_init\x18y \x01(\x0b\x32\x1a.ast.SpDataframeReaderInitH\x00\x12\x42\n\x1asp_dataframe_reader_option\x18z \x01(\x0b\x32\x1c.ast.SpDataframeReaderOptionH\x00\x12\x44\n\x1bsp_dataframe_reader_options\x18{ \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12\x42\n\x1asp_dataframe_reader_schema\x18| \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12O\n!sp_dataframe_reader_with_metadata\x18} \x01(\x0b\x32\".ast.SpDataframeReaderWithMetadataH\x00\x12/\n\x10sp_dataframe_ref\x18~ \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18\x7f \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x36\n\x13sp_dataframe_rollup\x18\x80\x01 \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12\x36\n\x13sp_dataframe_sample\x18\x81\x01 \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12G\n\x1csp_dataframe_select__columns\x18\x82\x01 \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x43\n\x1asp_dataframe_select__exprs\x18\x83\x01 \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x32\n\x11sp_dataframe_show\x18\x84\x01 \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x32\n\x11sp_dataframe_sort\x18\x85\x01 \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12P\n!sp_dataframe_stat_approx_quantile\x18\x86\x01 \x01(\x0b\x32\".ast.SpDataframeStatApproxQuantileH\x00\x12;\n\x16sp_dataframe_stat_corr\x18\x87\x01 \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x39\n\x15sp_dataframe_stat_cov\x18\x88\x01 \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x44\n\x1bsp_dataframe_stat_cross_tab\x18\x89\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x44\n\x1bsp_dataframe_stat_sample_by\x18\x8a\x01 \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x33\n\x12sp_dataframe_to_df\x18\x8b\x01 \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12J\n\x1esp_dataframe_to_local_iterator\x18\x8c\x01 \x01(\x0b\x32\x1f.ast.SpDataframeToLocalIteratorH\x00\x12;\n\x16sp_dataframe_to_pandas\x18\x8d\x01 \x01(\x0b\x32\x18.ast.SpDataframeToPandasH\x00\x12J\n\x1esp_dataframe_to_pandas_batches\x18\x8e\x01 \x01(\x0b\x32\x1f.ast.SpDataframeToPandasBatchesH\x00\x12\x34\n\x12sp_dataframe_union\x18\x8f\x01 \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12;\n\x16sp_dataframe_union_all\x18\x90\x01 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12I\n\x1esp_dataframe_union_all_by_name\x18\x91\x01 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x42\n\x1asp_dataframe_union_by_name\x18\x92\x01 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x38\n\x14sp_dataframe_unpivot\x18\x93\x01 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12?\n\x18sp_dataframe_with_column\x18\x94\x01 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12N\n sp_dataframe_with_column_renamed\x18\x95\x01 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12\x41\n\x19sp_dataframe_with_columns\x18\x96\x01 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x34\n\x12sp_dataframe_write\x18\x97\x01 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12.\n\x0fsp_datatype_val\x18\x98\x01 \x01(\x0b\x32\x12.ast.SpDatatypeValH\x00\x12%\n\nsp_flatten\x18\x99\x01 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12\"\n\tsp_fn_ref\x18\x9a\x01 \x01(\x0b\x32\x0c.ast.SpFnRefH\x00\x12)\n\x0csp_generator\x18\x9b\x01 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12\x30\n\x10sp_grouping_sets\x18\x9c\x01 \x01(\x0b\x32\x13.ast.SpGroupingSetsH\x00\x12S\n#sp_merge_delete_when_matched_clause\x18\x9d\x01 \x01(\x0b\x32#.ast.SpMergeDeleteWhenMatchedClauseH\x00\x12Z\n\'sp_merge_insert_when_not_matched_clause\x18\x9e\x01 \x01(\x0b\x32&.ast.SpMergeInsertWhenNotMatchedClauseH\x00\x12S\n#sp_merge_update_when_matched_clause\x18\x9f\x01 \x01(\x0b\x32#.ast.SpMergeUpdateWhenMatchedClauseH\x00\x12&\n\x0bsp_name_ref\x18\xa0\x01 \x01(\x0b\x32\x0e.ast.SpNameRefH\x00\x12!\n\x08sp_range\x18\xa1\x01 \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12(\n\x0csp_read_avro\x18\xa2\x01 \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12&\n\x0bsp_read_csv\x18\xa3\x01 \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12(\n\x0csp_read_json\x18\xa4\x01 \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12&\n\x0bsp_read_orc\x18\xa5\x01 \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12.\n\x0fsp_read_parquet\x18\xa6\x01 \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12*\n\rsp_read_table\x18\xa7\x01 \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12&\n\x0bsp_read_xml\x18\xa8\x01 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12T\n#sp_relational_grouped_dataframe_agg\x18\xa9\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12j\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\xaa\x01 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12\\\n\'sp_relational_grouped_dataframe_builtin\x18\xab\x01 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12X\n%sp_relational_grouped_dataframe_pivot\x18\xac\x01 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12T\n#sp_relational_grouped_dataframe_ref\x18\xad\x01 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x12\x1d\n\x06sp_row\x18\xae\x01 \x01(\x0b\x32\n.ast.SpRowH\x00\x12\x41\n\x19sp_session_table_function\x18\xaf\x01 \x01(\x0b\x32\x1b.ast.SpSessionTableFunctionH\x00\x12\x1d\n\x06sp_sql\x18\xb0\x01 \x01(\x0b\x32\n.ast.SpSqlH\x00\x12!\n\x08sp_table\x18\xb1\x01 \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12.\n\x0fsp_table_delete\x18\xb2\x01 \x01(\x0b\x32\x12.ast.SpTableDeleteH\x00\x12\x35\n\x13sp_table_drop_table\x18\xb3\x01 \x01(\x0b\x32\x15.ast.SpTableDropTableH\x00\x12:\n\x16sp_table_fn_call_alias\x18\xb4\x01 \x01(\x0b\x32\x17.ast.SpTableFnCallAliasH\x00\x12\x38\n\x15sp_table_fn_call_over\x18\xb5\x01 \x01(\x0b\x32\x16.ast.SpTableFnCallOverH\x00\x12,\n\x0esp_table_merge\x18\xb6\x01 \x01(\x0b\x32\x11.ast.SpTableMergeH\x00\x12.\n\x0fsp_table_sample\x18\xb7\x01 \x01(\x0b\x32\x12.ast.SpTableSampleH\x00\x12.\n\x0fsp_table_update\x18\xb8\x01 \x01(\x0b\x32\x12.ast.SpTableUpdateH\x00\x12\x39\n\x15sp_to_snowpark_pandas\x18\xb9\x01 \x01(\x0b\x32\x17.ast.SpToSnowparkPandasH\x00\x12\x37\n\x14sp_window_spec_empty\x18\xba\x01 \x01(\x0b\x32\x16.ast.SpWindowSpecEmptyH\x00\x12<\n\x17sp_window_spec_order_by\x18\xbb\x01 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x44\n\x1bsp_window_spec_partition_by\x18\xbc\x01 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x46\n\x1csp_window_spec_range_between\x18\xbd\x01 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x44\n\x1bsp_window_spec_rows_between\x18\xbe\x01 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x12\x44\n\x1bsp_write_copy_into_location\x18\xbf\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12(\n\x0csp_write_csv\x18\xc0\x01 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12*\n\rsp_write_json\x18\xc1\x01 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12.\n\x0fsp_write_pandas\x18\xc2\x01 \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x12\x30\n\x10sp_write_parquet\x18\xc3\x01 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12,\n\x0esp_write_table\x18\xc4\x01 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x12\x31\n\x10stored_procedure\x18\xc5\x01 \x01(\x0b\x32\x14.ast.StoredProcedureH\x00\x12%\n\nstring_val\x18\xc6\x01 \x01(\x0b\x32\x0e.ast.StringValH\x00\x12\x18\n\x03sub\x18\xc7\x01 \x01(\x0b\x32\x08.ast.SubH\x00\x12@\n\x18truncated_dataframe_expr\x18\xc8\x01 \x01(\x0b\x32\x1b.ast.TruncatedDataframeExprH\x00\x12-\n\x0etruncated_expr\x18\xc9\x01 \x01(\x0b\x32\x12.ast.TruncatedExprH\x00\x12\x64\n+truncated_relational_grouped_dataframe_expr\x18\xca\x01 \x01(\x0b\x32,.ast.TruncatedRelationalGroupedDataframeExprH\x00\x12#\n\ttuple_val\x18\xcb\x01 \x01(\x0b\x32\r.ast.TupleValH\x00\x12\x1a\n\x04udaf\x18\xcc\x01 \x01(\x0b\x32\t.ast.UdafH\x00\x12\x18\n\x03udf\x18\xcd\x01 \x01(\x0b\x32\x08.ast.UdfH\x00\x12\x1a\n\x04udtf\x18\xce\x01 \x01(\x0b\x32\t.ast.UdtfH\x00\x42\t\n\x07variant\"M\n\x14IndirectTableFnIdRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"U\n\x16IndirectTableFnNameRef\x12\x1c\n\x04name\x18\x01 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"4\n\x08Int64Val\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\x03\"T\n\x03Leq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"?\n\x07ListVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr\"S\n\x02Lt\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x03Mod\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x03Mul\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"@\n\x03Neg\x12\x1a\n\x07operand\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x03Neq\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"@\n\x03Not\x12\x1a\n\x07operand\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"(\n\x07NullVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\"`\n\rObjectGetItem\x12\x17\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x17\n\x03obj\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"S\n\x02Or\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"T\n\x03Pow\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"X\n\rPythonDateVal\x12\x0b\n\x03\x64\x61y\x18\x01 \x01(\x03\x12\r\n\x05month\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x0c\n\x04year\x18\x04 \x01(\x03\"\x92\x01\n\rPythonTimeVal\x12\x0c\n\x04hour\x18\x01 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x02 \x01(\x03\x12\x0e\n\x06minute\x18\x03 \x01(\x03\x12\x0e\n\x06second\x18\x04 \x01(\x03\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1f\n\x02tz\x18\x06 \x01(\x0b\x32\x13.ast.PythonTimeZone\"\xc1\x01\n\x12PythonTimestampVal\x12\x0b\n\x03\x64\x61y\x18\x01 \x01(\x03\x12\x0c\n\x04hour\x18\x02 \x01(\x03\x12\x13\n\x0bmicrosecond\x18\x03 \x01(\x03\x12\x0e\n\x06minute\x18\x04 \x01(\x03\x12\r\n\x05month\x18\x05 \x01(\x03\x12\x0e\n\x06second\x18\x06 \x01(\x03\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1f\n\x02tz\x18\x08 \x01(\x0b\x32\x13.ast.PythonTimeZone\x12\x0c\n\x04year\x18\t \x01(\x03\"O\n\rRedactedConst\x12\x1f\n\x0bproxy_value\x18\x01 \x01(\x0b\x32\n.ast.Const\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\xc3\x01\n\x07Request\x12\x35\n\x14interned_value_table\x18\x01 \x01(\x0b\x32\x17.ast.InternedValueTable\x12\x17\n\x04\x62ody\x18\x02 \x03(\x0b\x32\t.ast.Stmt\x12\x1a\n\x12\x63lient_ast_version\x18\x03 \x01(\x03\x12&\n\x0f\x63lient_language\x18\x04 \x01(\x0b\x32\r.ast.Language\x12$\n\x0e\x63lient_version\x18\x05 \x01(\x0b\x32\x0c.ast.Version\"\\\n\x08Response\x12\x35\n\x14interned_value_table\x18\x01 \x01(\x0b\x32\x17.ast.InternedValueTable\x12\x19\n\x04\x62ody\x18\x02 \x03(\x0b\x32\x0b.ast.Result\"\xce\x01\n\x06Result\x12!\n\x0btrait_error\x18\x01 \x01(\x0b\x32\n.ast.ErrorH\x00\x12\x1e\n\x07\x65val_ok\x18\x02 \x01(\x0b\x32\x0b.ast.EvalOkH\x00\x12.\n\x0f\x65xtension_error\x18\x03 \x01(\x0b\x32\x13.ast.ExtensionErrorH\x00\x12\x46\n\x1csession_reset_required_error\x18\x04 \x01(\x0b\x32\x1e.ast.SessionResetRequiredErrorH\x00\x42\t\n\x07variant\"F\n\tSeqMapVal\x12\x1a\n\x03kvs\x18\x01 \x03(\x0b\x32\r.ast.TupleVal\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"D\n\x19SessionResetRequiredError\x12\x0b\n\x03uid\x18\x01 \x01(\x03\x12\x1a\n\x06var_id\x18\x02 \x01(\x0b\x32\n.ast.VarId\"\x1d\n\rSfQueryResult\x12\x0c\n\x04uuid\x18\x01 \x01(\t\"\x0c\n\nShowResult\"c\n\nSpCaseExpr\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05value\x18\x03 \x01(\x0b\x32\t.ast.Expr\"v\n\rSpColumnAlias\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x66n\x18\x02 \x01(\x0b\x32\x14.ast.SpColumnAliasFn\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"W\n\x11SpColumnApply_Int\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x0b\n\x03idx\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\\\n\x14SpColumnApply_String\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\r\n\x05\x66ield\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"j\n\x0bSpColumnAsc\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12$\n\nnull_order\x18\x02 \x01(\x0b\x32\x10.ast.SpNullOrder\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x88\x01\n\x0fSpColumnBetween\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x0blower_bound\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1e\n\x0bupper_bound\x18\x04 \x01(\x0b\x32\t.ast.Expr\"Q\n\x10SpColumnCaseWhen\x12\x1e\n\x05\x63\x61ses\x18\x01 \x03(\x0b\x32\x0f.ast.SpCaseExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"b\n\x0cSpColumnCast\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType\"k\n\x0cSpColumnDesc\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12$\n\nnull_order\x18\x02 \x01(\x0b\x32\x10.ast.SpNullOrder\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"I\n\x10SpColumnEqualNan\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"b\n\x11SpColumnEqualNull\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x9d\t\n\nSpColumnFn\x12-\n\x0fsp_column_alias\x18\x01 \x01(\x0b\x32\x12.ast.SpColumnAliasH\x00\x12\x36\n\x14sp_column_apply__int\x18\x02 \x01(\x0b\x32\x16.ast.SpColumnApply_IntH\x00\x12<\n\x17sp_column_apply__string\x18\x03 \x01(\x0b\x32\x19.ast.SpColumnApply_StringH\x00\x12)\n\rsp_column_asc\x18\x04 \x01(\x0b\x32\x10.ast.SpColumnAscH\x00\x12\x31\n\x11sp_column_between\x18\x05 \x01(\x0b\x32\x14.ast.SpColumnBetweenH\x00\x12+\n\x0esp_column_cast\x18\x06 \x01(\x0b\x32\x11.ast.SpColumnCastH\x00\x12+\n\x0esp_column_desc\x18\x07 \x01(\x0b\x32\x11.ast.SpColumnDescH\x00\x12\x34\n\x13sp_column_equal_nan\x18\x08 \x01(\x0b\x32\x15.ast.SpColumnEqualNanH\x00\x12\'\n\x0csp_column_in\x18\t \x01(\x0b\x32\x0f.ast.SpColumnInH\x00\x12\x37\n\x15sp_column_is_not_null\x18\n \x01(\x0b\x32\x16.ast.SpColumnIsNotNullH\x00\x12\x30\n\x11sp_column_is_null\x18\x0b \x01(\x0b\x32\x13.ast.SpColumnIsNullH\x00\x12+\n\x0esp_column_over\x18\x0c \x01(\x0b\x32\x11.ast.SpColumnOverH\x00\x12>\n\x18sp_column_string_collate\x18\r \x01(\x0b\x32\x1a.ast.SpColumnStringCollateH\x00\x12@\n\x19sp_column_string_contains\x18\x0e \x01(\x0b\x32\x1b.ast.SpColumnStringContainsH\x00\x12\x41\n\x1asp_column_string_ends_with\x18\x0f \x01(\x0b\x32\x1b.ast.SpColumnStringEndsWithH\x00\x12\x38\n\x15sp_column_string_like\x18\x10 \x01(\x0b\x32\x17.ast.SpColumnStringLikeH\x00\x12<\n\x17sp_column_string_regexp\x18\x11 \x01(\x0b\x32\x19.ast.SpColumnStringRegexpH\x00\x12\x45\n\x1csp_column_string_starts_with\x18\x12 \x01(\x0b\x32\x1d.ast.SpColumnStringStartsWithH\x00\x12<\n\x17sp_column_string_substr\x18\x13 \x01(\x0b\x32\x19.ast.SpColumnStringSubstrH\x00\x12\x32\n\x12sp_column_try_cast\x18\x14 \x01(\x0b\x32\x14.ast.SpColumnTryCastH\x00\x12:\n\x16sp_column_within_group\x18\x15 \x01(\x0b\x32\x18.ast.SpColumnWithinGroupH\x00\x42\t\n\x07variant\"^\n\nSpColumnIn\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06values\x18\x03 \x03(\x0b\x32\t.ast.Expr\"J\n\x11SpColumnIsNotNull\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"G\n\x0eSpColumnIsNull\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"q\n\x0cSpColumnOver\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12*\n\x0bwindow_spec\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"m\n\x0fSpColumnSqlExpr\x12.\n\x08\x64\x66_alias\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x0b\n\x03sql\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"q\n\x15SpColumnStringCollate\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12!\n\x0e\x63ollation_spec\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"k\n\x16SpColumnStringContains\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"j\n\x16SpColumnStringEndsWith\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06suffix\x18\x03 \x01(\x0b\x32\t.ast.Expr\"g\n\x12SpColumnStringLike\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x88\x01\n\x14SpColumnStringRegexp\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\nparameters\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1a\n\x07pattern\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"l\n\x18SpColumnStringStartsWith\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x19\n\x06prefix\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"}\n\x14SpColumnStringSubstr\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03len\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03pos\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"e\n\x0fSpColumnTryCast\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1b\n\x02to\x18\x03 \x01(\x0b\x32\x0f.ast.SpDataType\"l\n\x13SpColumnWithinGroup\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x04\x63ols\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"~\n\x11SpCreateDataframe\x12\"\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeData\x12&\n\x06schema\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeSchema\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"r\n\x0eSpDataframeAgg\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x05\x65xprs\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"a\n\x10SpDataframeAlias\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xc9\x01\n\x1eSpDataframeAnalyticsComputeLag\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x0c\n\x04lags\x18\x05 \x03(\x03\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\"\xcb\x01\n\x1fSpDataframeAnalyticsComputeLead\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\r\n\x05leads\x18\x05 \x03(\x03\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\"\xe6\x01\n!SpDataframeAnalyticsCumulativeAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x12\n\nis_forward\x18\x05 \x01(\x08\x12\x10\n\x08order_by\x18\x06 \x03(\t\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\"\xe4\x01\n\x1dSpDataframeAnalyticsMovingAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x10\n\x08order_by\x18\x05 \x03(\t\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x0cwindow_sizes\x18\x07 \x03(\x03\"\xfd\x01\n!SpDataframeAnalyticsTimeSeriesAgg\x12+\n\x04\x61ggs\x18\x01 \x03(\x0b\x32\x1d.ast.Tuple_String_List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1b\n\x13\x66ormatted_col_names\x18\x03 \x03(\t\x12\x10\n\x08group_by\x18\x04 \x03(\t\x12\x18\n\x10sliding_interval\x18\x05 \x01(\t\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x10\n\x08time_col\x18\x07 \x01(\t\x12\x0f\n\x07windows\x18\x08 \x03(\t\"\x8d\x01\n\x16SpDataframeCacheResult\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\"c\n\x0eSpDataframeCol\x12\x10\n\x08\x63ol_name\x18\x01 \x01(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xd1\x01\n\x12SpDataframeCollect\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x0e\x63\x61se_sensitive\x18\x02 \x01(\x08\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x18\n\x10log_on_exception\x18\x04 \x01(\x08\x12\x0f\n\x07no_wait\x18\x05 \x01(\x08\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x07 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xf9\x03\n\x18SpDataframeCopyIntoTable\x12,\n\x0c\x63opy_options\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\r\n\x05\x66iles\x18\x03 \x03(\t\x12\x33\n\x13\x66ormat_type_options\x18\x04 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x30\n\x0eiceberg_config\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12-\n\x07pattern\x18\x06 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x08 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\"\n\ntable_name\x18\t \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x16\n\x0etarget_columns\x18\n \x03(\t\x12\"\n\x0ftransformations\x18\x0b \x03(\x0b\x32\t.ast.Expr\x12\x35\n\x0fvalidation_mode\x18\x0c \x01(\x0b\x32\x1c.google.protobuf.StringValue\"\x8c\x01\n\x10SpDataframeCount\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xc6\x04\n&SpDataframeCreateOrReplaceDynamicTable\x12\'\n\x0f\x63lustering_keys\x18\x01 \x01(\x0b\x32\x0e.ast.List_Expr\x12-\n\x07\x63omment\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x38\n\x13\x64\x61ta_retention_time\x18\x03 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12 \n\x02\x64\x66\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x30\n\ninitialize\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x14\n\x0cis_transient\x18\x06 \x01(\x08\x12\x0b\n\x03lag\x18\x07 \x01(\t\x12<\n\x17max_data_extension_time\x18\x08 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x04mode\x18\t \x01(\x0b\x32\x0f.ast.SpSaveMode\x12\x1c\n\x04name\x18\n \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x32\n\x0crefresh_mode\x18\x0b \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x0c \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\r \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x11\n\twarehouse\x18\x0e \x01(\t\"\xf3\x01\n\x1eSpDataframeCreateOrReplaceView\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0f\n\x07is_temp\x18\x03 \x01(\x08\x12\x1c\n\x04name\x18\x04 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x06 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xd9\x01\n\x14SpDataframeCrossJoin\x12!\n\x03lhs\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07lsuffix\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07rsuffix\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\"r\n\x0fSpDataframeCube\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"v\n\x13SpDataframeDescribe\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"V\n\x13SpDataframeDistinct\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"r\n\x0fSpDataframeDrop\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"|\n\x19SpDataframeDropDuplicates\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"y\n\x11SpDataframeExcept\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xa9%\n\x0fSpDataframeExpr\x12?\n\x18\x65xtension_dataframe_expr\x18\x01 \x01(\x0b\x32\x1b.ast.ExtensionDataframeExprH\x00\x12\x35\n\x13sp_create_dataframe\x18\x02 \x01(\x0b\x32\x16.ast.SpCreateDataframeH\x00\x12/\n\x10sp_dataframe_agg\x18\x03 \x01(\x0b\x32\x13.ast.SpDataframeAggH\x00\x12\x33\n\x12sp_dataframe_alias\x18\x04 \x01(\x0b\x32\x15.ast.SpDataframeAliasH\x00\x12Q\n\"sp_dataframe_analytics_compute_lag\x18\x05 \x01(\x0b\x32#.ast.SpDataframeAnalyticsComputeLagH\x00\x12S\n#sp_dataframe_analytics_compute_lead\x18\x06 \x01(\x0b\x32$.ast.SpDataframeAnalyticsComputeLeadH\x00\x12W\n%sp_dataframe_analytics_cumulative_agg\x18\x07 \x01(\x0b\x32&.ast.SpDataframeAnalyticsCumulativeAggH\x00\x12O\n!sp_dataframe_analytics_moving_agg\x18\x08 \x01(\x0b\x32\".ast.SpDataframeAnalyticsMovingAggH\x00\x12X\n&sp_dataframe_analytics_time_series_agg\x18\t \x01(\x0b\x32&.ast.SpDataframeAnalyticsTimeSeriesAggH\x00\x12\x37\n\x14sp_dataframe_collect\x18\n \x01(\x0b\x32\x17.ast.SpDataframeCollectH\x00\x12\x33\n\x12sp_dataframe_count\x18\x0b \x01(\x0b\x32\x15.ast.SpDataframeCountH\x00\x12<\n\x17sp_dataframe_cross_join\x18\x0c \x01(\x0b\x32\x19.ast.SpDataframeCrossJoinH\x00\x12\x39\n\x15sp_dataframe_describe\x18\r \x01(\x0b\x32\x18.ast.SpDataframeDescribeH\x00\x12\x39\n\x15sp_dataframe_distinct\x18\x0e \x01(\x0b\x32\x18.ast.SpDataframeDistinctH\x00\x12\x31\n\x11sp_dataframe_drop\x18\x0f \x01(\x0b\x32\x14.ast.SpDataframeDropH\x00\x12\x46\n\x1csp_dataframe_drop_duplicates\x18\x10 \x01(\x0b\x32\x1e.ast.SpDataframeDropDuplicatesH\x00\x12\x35\n\x13sp_dataframe_except\x18\x11 \x01(\x0b\x32\x16.ast.SpDataframeExceptH\x00\x12\x35\n\x13sp_dataframe_filter\x18\x12 \x01(\x0b\x32\x16.ast.SpDataframeFilterH\x00\x12\x33\n\x12sp_dataframe_first\x18\x13 \x01(\x0b\x32\x15.ast.SpDataframeFirstH\x00\x12\x37\n\x14sp_dataframe_flatten\x18\x14 \x01(\x0b\x32\x17.ast.SpDataframeFlattenH\x00\x12;\n\x16sp_dataframe_intersect\x18\x15 \x01(\x0b\x32\x19.ast.SpDataframeIntersectH\x00\x12\x31\n\x11sp_dataframe_join\x18\x16 \x01(\x0b\x32\x14.ast.SpDataframeJoinH\x00\x12M\n sp_dataframe_join_table_function\x18\x17 \x01(\x0b\x32!.ast.SpDataframeJoinTableFunctionH\x00\x12\x33\n\x12sp_dataframe_limit\x18\x18 \x01(\x0b\x32\x15.ast.SpDataframeLimitH\x00\x12\x45\n\x1csp_dataframe_na_drop__python\x18\x19 \x01(\x0b\x32\x1d.ast.SpDataframeNaDrop_PythonH\x00\x12\x43\n\x1bsp_dataframe_na_drop__scala\x18\x1a \x01(\x0b\x32\x1c.ast.SpDataframeNaDrop_ScalaH\x00\x12\x36\n\x14sp_dataframe_na_fill\x18\x1b \x01(\x0b\x32\x16.ast.SpDataframeNaFillH\x00\x12<\n\x17sp_dataframe_na_replace\x18\x1c \x01(\x0b\x32\x19.ast.SpDataframeNaReplaceH\x00\x12@\n\x19sp_dataframe_natural_join\x18\x1d \x01(\x0b\x32\x1b.ast.SpDataframeNaturalJoinH\x00\x12@\n\x19sp_dataframe_random_split\x18\x1e \x01(\x0b\x32\x1b.ast.SpDataframeRandomSplitH\x00\x12/\n\x10sp_dataframe_ref\x18\x1f \x01(\x0b\x32\x13.ast.SpDataframeRefH\x00\x12\x35\n\x13sp_dataframe_rename\x18  \x01(\x0b\x32\x16.ast.SpDataframeRenameH\x00\x12\x35\n\x13sp_dataframe_sample\x18! \x01(\x0b\x32\x16.ast.SpDataframeSampleH\x00\x12\x46\n\x1csp_dataframe_select__columns\x18\" \x01(\x0b\x32\x1e.ast.SpDataframeSelect_ColumnsH\x00\x12\x42\n\x1asp_dataframe_select__exprs\x18# \x01(\x0b\x32\x1c.ast.SpDataframeSelect_ExprsH\x00\x12\x31\n\x11sp_dataframe_show\x18$ \x01(\x0b\x32\x14.ast.SpDataframeShowH\x00\x12\x31\n\x11sp_dataframe_sort\x18% \x01(\x0b\x32\x14.ast.SpDataframeSortH\x00\x12O\n!sp_dataframe_stat_approx_quantile\x18& \x01(\x0b\x32\".ast.SpDataframeStatApproxQuantileH\x00\x12:\n\x16sp_dataframe_stat_corr\x18\' \x01(\x0b\x32\x18.ast.SpDataframeStatCorrH\x00\x12\x38\n\x15sp_dataframe_stat_cov\x18( \x01(\x0b\x32\x17.ast.SpDataframeStatCovH\x00\x12\x43\n\x1bsp_dataframe_stat_cross_tab\x18) \x01(\x0b\x32\x1c.ast.SpDataframeStatCrossTabH\x00\x12\x43\n\x1bsp_dataframe_stat_sample_by\x18* \x01(\x0b\x32\x1c.ast.SpDataframeStatSampleByH\x00\x12\x32\n\x12sp_dataframe_to_df\x18+ \x01(\x0b\x32\x14.ast.SpDataframeToDfH\x00\x12I\n\x1esp_dataframe_to_local_iterator\x18, \x01(\x0b\x32\x1f.ast.SpDataframeToLocalIteratorH\x00\x12:\n\x16sp_dataframe_to_pandas\x18- \x01(\x0b\x32\x18.ast.SpDataframeToPandasH\x00\x12I\n\x1esp_dataframe_to_pandas_batches\x18. \x01(\x0b\x32\x1f.ast.SpDataframeToPandasBatchesH\x00\x12\x33\n\x12sp_dataframe_union\x18/ \x01(\x0b\x32\x15.ast.SpDataframeUnionH\x00\x12:\n\x16sp_dataframe_union_all\x18\x30 \x01(\x0b\x32\x18.ast.SpDataframeUnionAllH\x00\x12H\n\x1esp_dataframe_union_all_by_name\x18\x31 \x01(\x0b\x32\x1e.ast.SpDataframeUnionAllByNameH\x00\x12\x41\n\x1asp_dataframe_union_by_name\x18\x32 \x01(\x0b\x32\x1b.ast.SpDataframeUnionByNameH\x00\x12\x37\n\x14sp_dataframe_unpivot\x18\x33 \x01(\x0b\x32\x17.ast.SpDataframeUnpivotH\x00\x12>\n\x18sp_dataframe_with_column\x18\x34 \x01(\x0b\x32\x1a.ast.SpDataframeWithColumnH\x00\x12M\n sp_dataframe_with_column_renamed\x18\x35 \x01(\x0b\x32!.ast.SpDataframeWithColumnRenamedH\x00\x12@\n\x19sp_dataframe_with_columns\x18\x36 \x01(\x0b\x32\x1b.ast.SpDataframeWithColumnsH\x00\x12\x33\n\x12sp_dataframe_write\x18\x37 \x01(\x0b\x32\x15.ast.SpDataframeWriteH\x00\x12$\n\nsp_flatten\x18\x38 \x01(\x0b\x32\x0e.ast.SpFlattenH\x00\x12(\n\x0csp_generator\x18\x39 \x01(\x0b\x32\x10.ast.SpGeneratorH\x00\x12 \n\x08sp_range\x18: \x01(\x0b\x32\x0c.ast.SpRangeH\x00\x12\'\n\x0csp_read_avro\x18; \x01(\x0b\x32\x0f.ast.SpReadAvroH\x00\x12%\n\x0bsp_read_csv\x18< \x01(\x0b\x32\x0e.ast.SpReadCsvH\x00\x12\'\n\x0csp_read_json\x18= \x01(\x0b\x32\x0f.ast.SpReadJsonH\x00\x12%\n\x0bsp_read_orc\x18> \x01(\x0b\x32\x0e.ast.SpReadOrcH\x00\x12-\n\x0fsp_read_parquet\x18? \x01(\x0b\x32\x12.ast.SpReadParquetH\x00\x12)\n\rsp_read_table\x18@ \x01(\x0b\x32\x10.ast.SpReadTableH\x00\x12%\n\x0bsp_read_xml\x18\x41 \x01(\x0b\x32\x0e.ast.SpReadXmlH\x00\x12S\n#sp_relational_grouped_dataframe_agg\x18\x42 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeAggH\x00\x12i\n/sp_relational_grouped_dataframe_apply_in_pandas\x18\x43 \x01(\x0b\x32..ast.SpRelationalGroupedDataframeApplyInPandasH\x00\x12[\n\'sp_relational_grouped_dataframe_builtin\x18\x44 \x01(\x0b\x32(.ast.SpRelationalGroupedDataframeBuiltinH\x00\x12W\n%sp_relational_grouped_dataframe_pivot\x18\x45 \x01(\x0b\x32&.ast.SpRelationalGroupedDataframePivotH\x00\x12@\n\x19sp_session_table_function\x18\x46 \x01(\x0b\x32\x1b.ast.SpSessionTableFunctionH\x00\x12\x1c\n\x06sp_sql\x18G \x01(\x0b\x32\n.ast.SpSqlH\x00\x12 \n\x08sp_table\x18H \x01(\x0b\x32\x0c.ast.SpTableH\x00\x12-\n\x0fsp_table_delete\x18I \x01(\x0b\x32\x12.ast.SpTableDeleteH\x00\x12\x34\n\x13sp_table_drop_table\x18J \x01(\x0b\x32\x15.ast.SpTableDropTableH\x00\x12+\n\x0esp_table_merge\x18K \x01(\x0b\x32\x11.ast.SpTableMergeH\x00\x12-\n\x0fsp_table_sample\x18L \x01(\x0b\x32\x12.ast.SpTableSampleH\x00\x12-\n\x0fsp_table_update\x18M \x01(\x0b\x32\x12.ast.SpTableUpdateH\x00\x12-\n\x0fsp_write_pandas\x18N \x01(\x0b\x32\x12.ast.SpWritePandasH\x00\x12?\n\x18truncated_dataframe_expr\x18O \x01(\x0b\x32\x1b.ast.TruncatedDataframeExprH\x00\x42\t\n\x07variant\"r\n\x11SpDataframeFilter\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xa3\x01\n\x10SpDataframeFirst\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03num\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xdf\x01\n\x12SpDataframeFlatten\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x18\n\x05input\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12 \n\x04mode\x18\x03 \x01(\x0b\x32\x12.ast.SpFlattenMode\x12\r\n\x05outer\x18\x04 \x01(\x08\x12*\n\x04path\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x11\n\trecursive\x18\x06 \x01(\x08\x12\x1d\n\x03src\x18\x07 \x01(\x0b\x32\x10.ast.SrcPosition\"u\n\x12SpDataframeGroupBy\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8a\x01\n\x1eSpDataframeGroupByGroupingSets\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\rgrouping_sets\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"|\n\x14SpDataframeIntersect\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xba\x02\n\x0fSpDataframeJoin\x12\x1c\n\tjoin_expr\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\"\n\tjoin_type\x18\x02 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07lsuffix\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\"\n\x0fmatch_condition\x18\x05 \x01(\x0b\x32\t.ast.Expr\x12!\n\x03rhs\x18\x06 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12-\n\x07rsuffix\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\"w\n\x1cSpDataframeJoinTableFunction\x12\x15\n\x02\x66n\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"n\n\x10SpDataframeLimit\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\t\n\x01n\x18\x02 \x01(\x03\x12\x0e\n\x06offset\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb7\x01\n\x18SpDataframeNaDrop_Python\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x0b\n\x03how\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12+\n\x06thresh\x18\x05 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\"\x87\x01\n\x17SpDataframeNaDrop_Scala\x12\x0c\n\x04\x63ols\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x15min_non_nulls_per_row\x18\x03 \x01(\x03\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb9\x01\n\x11SpDataframeNaFill\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x03 \x01(\x0b\x32\x10.ast.List_String\x12\x18\n\x05value\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12\'\n\tvalue_map\x18\x05 \x01(\x0b\x32\x14.ast.Map_String_Expr\"\xae\x02\n\x14SpDataframeNaReplace\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12+\n\x0freplacement_map\x18\x02 \x01(\x0b\x32\x12.ast.Map_Expr_Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12 \n\x06subset\x18\x04 \x01(\x0b\x32\x10.ast.List_String\x12\'\n\x0fto_replace_list\x18\x05 \x01(\x0b\x32\x0e.ast.List_Expr\x12#\n\x10to_replace_value\x18\x06 \x01(\x0b\x32\t.ast.Expr\x12\x18\n\x05value\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x06values\x18\x08 \x01(\x0b\x32\x0e.ast.List_Expr\"\xa1\x01\n\x16SpDataframeNaturalJoin\x12\"\n\tjoin_type\x18\x01 \x01(\x0b\x32\x0f.ast.SpJoinType\x12!\n\x03lhs\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12!\n\x03rhs\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb8\x01\n\x10SpDataframePivot\x12\"\n\x0f\x64\x65\x66\x61ult_on_null\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1c\n\tpivot_col\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x06values\x18\x05 \x01(\x0b\x32\x11.ast.SpPivotValue\"\xc9\x01\n\x16SpDataframeRandomSplit\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12)\n\x04seed\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0f\n\x07weights\x18\x05 \x03(\x01\"\xfd\x02\n\x11SpDataframeReader\x12>\n\x18sp_dataframe_reader_init\x18\x01 \x01(\x0b\x32\x1a.ast.SpDataframeReaderInitH\x00\x12\x42\n\x1asp_dataframe_reader_option\x18\x02 \x01(\x0b\x32\x1c.ast.SpDataframeReaderOptionH\x00\x12\x44\n\x1bsp_dataframe_reader_options\x18\x03 \x01(\x0b\x32\x1d.ast.SpDataframeReaderOptionsH\x00\x12\x42\n\x1asp_dataframe_reader_schema\x18\x04 \x01(\x0b\x32\x1c.ast.SpDataframeReaderSchemaH\x00\x12O\n!sp_dataframe_reader_with_metadata\x18\x05 \x01(\x0b\x32\".ast.SpDataframeReaderWithMetadataH\x00\x42\t\n\x07variant\"6\n\x15SpDataframeReaderInit\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\"\x87\x01\n\x17SpDataframeReaderOption\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x18\n\x05value\x18\x04 \x01(\x0b\x32\t.ast.Expr\"\x8a\x01\n\x18SpDataframeReaderOptions\x12\'\n\x07\x63onfigs\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x83\x01\n\x17SpDataframeReaderSchema\x12&\n\x06reader\x18\x01 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12!\n\x06schema\x18\x02 \x01(\x0b\x32\x11.ast.SpStructType\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x92\x01\n\x1dSpDataframeReaderWithMetadata\x12*\n\x10metadata_columns\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"G\n\x0eSpDataframeRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\xa8\x01\n\x11SpDataframeRename\x12 \n\rcol_or_mapper\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x30\n\nnew_column\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"t\n\x11SpDataframeRollup\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xba\x01\n\x11SpDataframeSample\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\x03num\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12:\n\x14probability_fraction\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"|\n\x19SpDataframeSelect_Columns\x12\x1e\n\x04\x63ols\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"{\n\x17SpDataframeSelect_Exprs\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1f\n\x05\x65xprs\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"S\n\x0fSpDataframeShow\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\t\n\x01n\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x90\x01\n\x0fSpDataframeSort\x12\x1c\n\tascending\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1e\n\x04\x63ols\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb7\x01\n\x1dSpDataframeStatApproxQuantile\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x12\n\npercentile\x18\x03 \x03(\x01\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xb2\x01\n\x13SpDataframeStatCorr\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xb1\x01\n\x12SpDataframeStatCov\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xb6\x01\n\x17SpDataframeStatCrossTab\x12\x17\n\x04\x63ol1\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x17\n\x04\x63ol2\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x9c\x01\n\x17SpDataframeStatSampleBy\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\tfractions\x18\x03 \x03(\x0b\x32\x15.ast.Tuple_Expr_Float\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"w\n\x0fSpDataframeToDf\x12#\n\tcol_names\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xae\x01\n\x1aSpDataframeToLocalIterator\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x0e\x63\x61se_sensitive\x18\x02 \x01(\x08\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x8f\x01\n\x13SpDataframeToPandas\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x96\x01\n\x1aSpDataframeToPandasBatches\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x16\n\x02id\x18\x02 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x04 \x03(\x0b\x32\x18.ast.Tuple_String_String\"x\n\x10SpDataframeUnion\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"{\n\x13SpDataframeUnionAll\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x81\x01\n\x19SpDataframeUnionAllByName\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"~\n\x16SpDataframeUnionByName\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\x05other\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb7\x01\n\x12SpDataframeUnpivot\x12\x1e\n\x0b\x63olumn_list\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x15\n\rinclude_nulls\x18\x03 \x01(\x08\x12\x13\n\x0bname_column\x18\x04 \x01(\t\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x14\n\x0cvalue_column\x18\x06 \x01(\t\"\x82\x01\n\x15SpDataframeWithColumn\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x10\n\x08\x63ol_name\x18\x02 \x01(\t\x12 \n\x02\x64\x66\x18\x03 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\x89\x01\n\x1cSpDataframeWithColumnRenamed\x12\x16\n\x03\x63ol\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x10\n\x08new_name\x18\x03 \x01(\t\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\x87\x01\n\x16SpDataframeWithColumns\x12\x11\n\tcol_names\x18\x01 \x03(\t\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x19\n\x06values\x18\x04 \x03(\x0b\x32\t.ast.Expr\"\xc1\x01\n\x10SpDataframeWrite\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\'\n\x07options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x1f\n\x0cpartition_by\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\"\n\tsave_mode\x18\x04 \x01(\x0b\x32\x0f.ast.SpSaveMode\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\"\xc6\x02\n\x11SpDataframeWriter\x12/\n\x13trait_sp_write_file\x18\x01 \x01(\x0b\x32\x10.ast.SpWriteFileH\x00\x12\x43\n\x1bsp_write_copy_into_location\x18\x02 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12\'\n\x0csp_write_csv\x18\x03 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x04 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x05 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x12+\n\x0esp_write_table\x18\x06 \x01(\x0b\x32\x11.ast.SpWriteTableH\x00\x42\t\n\x07variant\"Q\n\rSpDatatypeVal\x12!\n\x08\x64\x61tatype\x18\x01 \x01(\x0b\x32\x0f.ast.SpDataType\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb4\x01\n\tSpFlatten\x12\x18\n\x05input\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12 \n\x04mode\x18\x02 \x01(\x0b\x32\x12.ast.SpFlattenMode\x12\r\n\x05outer\x18\x03 \x01(\x08\x12*\n\x04path\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x11\n\trecursive\x18\x05 \x01(\x08\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\"@\n\x07SpFnRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"~\n\x0bSpGenerator\x12!\n\x07\x63olumns\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x11\n\trow_count\x18\x02 \x01(\x03\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x1a\n\x12time_limit_seconds\x18\x04 \x01(\x03\"O\n\x0eSpGroupingSets\x12\x1e\n\x04sets\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\x9f\x02\n\x0fSpMatchedClause\x12R\n#sp_merge_delete_when_matched_clause\x18\x01 \x01(\x0b\x32#.ast.SpMergeDeleteWhenMatchedClauseH\x00\x12Y\n\'sp_merge_insert_when_not_matched_clause\x18\x02 \x01(\x0b\x32&.ast.SpMergeInsertWhenNotMatchedClauseH\x00\x12R\n#sp_merge_update_when_matched_clause\x18\x03 \x01(\x0b\x32#.ast.SpMergeUpdateWhenMatchedClauseH\x00\x42\t\n\x07variant\"]\n\x1eSpMergeDeleteWhenMatchedClause\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\xac\x01\n!SpMergeInsertWhenNotMatchedClause\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12#\n\x0binsert_keys\x18\x02 \x01(\x0b\x32\x0e.ast.List_Expr\x12%\n\rinsert_values\x18\x03 \x01(\x0b\x32\x0e.ast.List_Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8d\x01\n\x1eSpMergeUpdateWhenMatchedClause\x12\x1c\n\tcondition\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12.\n\x12update_assignments\x18\x03 \x01(\x0b\x32\x12.ast.Map_Expr_Expr\"E\n\tSpNameRef\x12\x19\n\x04name\x18\x01 \x01(\x0b\x32\x0b.ast.SpName\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8c\x01\n\x07SpRange\x12(\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\r\n\x05start\x18\x03 \x01(\x03\x12)\n\x04step\x18\x04 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\"a\n\nSpReadAvro\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"`\n\tSpReadCsv\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"a\n\nSpReadJson\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"`\n\tSpReadOrc\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"d\n\rSpReadParquet\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"r\n\x0bSpReadTable\x12\x1c\n\x04name\x18\x01 \x01(\x0b\x32\x0e.ast.SpNameRef\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"`\n\tSpReadXml\x12\x0c\n\x04path\x18\x01 \x01(\t\x12&\n\x06reader\x18\x02 \x01(\x0b\x32\x16.ast.SpDataframeReader\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x9c\x01\n\x1fSpRelationalGroupedDataframeAgg\x12\x1f\n\x05\x65xprs\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\xf6\x01\n)SpRelationalGroupedDataframeApplyInPandas\x12\x1d\n\x04\x66unc\x18\x01 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12&\n\x06kwargs\x18\x03 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12(\n\routput_schema\x18\x04 \x01(\x0b\x32\x11.ast.SpStructType\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\"\xb1\x01\n#SpRelationalGroupedDataframeBuiltin\x12\x10\n\x08\x61gg_name\x18\x01 \x01(\t\x12\x1e\n\x04\x63ols\x18\x02 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x39\n\ngrouped_df\x18\x03 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xf9\x04\n SpRelationalGroupedDataframeExpr\x12\x63\n+extension_relational_grouped_dataframe_expr\x18\x01 \x01(\x0b\x32,.ast.ExtensionRelationalGroupedDataframeExprH\x00\x12\x31\n\x11sp_dataframe_cube\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeCubeH\x00\x12\x38\n\x15sp_dataframe_group_by\x18\x03 \x01(\x0b\x32\x17.ast.SpDataframeGroupByH\x00\x12R\n#sp_dataframe_group_by_grouping_sets\x18\x04 \x01(\x0b\x32#.ast.SpDataframeGroupByGroupingSetsH\x00\x12\x33\n\x12sp_dataframe_pivot\x18\x05 \x01(\x0b\x32\x15.ast.SpDataframePivotH\x00\x12\x35\n\x13sp_dataframe_rollup\x18\x06 \x01(\x0b\x32\x16.ast.SpDataframeRollupH\x00\x12S\n#sp_relational_grouped_dataframe_ref\x18\x07 \x01(\x0b\x32$.ast.SpRelationalGroupedDataframeRefH\x00\x12\x63\n+truncated_relational_grouped_dataframe_expr\x18\x08 \x01(\x0b\x32,.ast.TruncatedRelationalGroupedDataframeExprH\x00\x42\t\n\x07variant\"\xe2\x01\n!SpRelationalGroupedDataframePivot\x12\"\n\x0f\x64\x65\x66\x61ult_on_null\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x39\n\ngrouped_df\x18\x02 \x01(\x0b\x32%.ast.SpRelationalGroupedDataframeExpr\x12\x1c\n\tpivot_col\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\x12!\n\x06values\x18\x05 \x01(\x0b\x32\x11.ast.SpPivotValue\"X\n\x1fSpRelationalGroupedDataframeRef\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"^\n\x05SpRow\x12\x1f\n\x05names\x18\x01 \x01(\x0b\x32\x10.ast.List_String\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x03 \x03(\x0b\x32\t.ast.Expr\"N\n\x16SpSessionTableFunction\x12\x15\n\x02\x66n\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"P\n\x05SpSql\x12\x19\n\x06params\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\r\n\x05query\x18\x02 \x01(\t\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x8f\x01\n\x07SpTable\x12!\n\x19is_temp_table_for_cleanup\x18\x01 \x01(\x08\x12\x1c\n\x04name\x18\x02 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\x12$\n\x07variant\x18\x04 \x01(\x0b\x32\x13.ast.SpTableVariant\"\xcd\x01\n\rSpTableDelete\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x1c\n\tcondition\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12$\n\x06source\x18\x04 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x05 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x06 \x03(\x0b\x32\x18.ast.Tuple_String_String\"I\n\x10SpTableDropTable\x12\x16\n\x02id\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"n\n\x12SpTableFnCallAlias\x12!\n\x07\x61liases\x18\x01 \x01(\x0b\x32\x10.ast.ExprArgList\x12\x16\n\x03lhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"\x88\x01\n\x11SpTableFnCallOver\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x1b\n\x08order_by\x18\x02 \x03(\x0b\x32\t.ast.Expr\x12\x1f\n\x0cpartition_by\x18\x03 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"\xf3\x01\n\x0cSpTableMerge\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12%\n\x07\x63lauses\x18\x02 \x03(\x0b\x32\x14.ast.SpMatchedClause\x12\x16\n\x02id\x18\x03 \x01(\x0b\x32\n.ast.VarId\x12\x1c\n\tjoin_expr\x18\x04 \x01(\x0b\x32\t.ast.Expr\x12$\n\x06source\x18\x05 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x07 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x98\x02\n\rSpTableSample\x12 \n\x02\x64\x66\x18\x01 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12(\n\x03num\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12:\n\x14probability_fraction\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12\x35\n\x0fsampling_method\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12)\n\x04seed\x18\x05 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\"\xfa\x01\n\rSpTableUpdate\x12+\n\x0b\x61ssignments\x18\x01 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\r\n\x05\x62lock\x18\x02 \x01(\x08\x12\x1c\n\tcondition\x18\x03 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x02id\x18\x04 \x01(\x0b\x32\n.ast.VarId\x12$\n\x06source\x18\x05 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12\x1d\n\x03src\x18\x06 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x07 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x9d\x01\n\x12SpToSnowparkPandas\x12!\n\x07\x63olumns\x18\x01 \x01(\x0b\x32\x10.ast.List_String\x12 \n\x02\x64\x66\x18\x02 \x01(\x0b\x32\x14.ast.SpDataframeExpr\x12#\n\tindex_col\x18\x03 \x01(\x0b\x32\x10.ast.List_String\x12\x1d\n\x03src\x18\x04 \x01(\x0b\x32\x10.ast.SrcPosition\"V\n\x11SpWindowSpecEmpty\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\"\n\x03wnd\x18\x02 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"\xe3\x02\n\x10SpWindowSpecExpr\x12\x36\n\x14sp_window_spec_empty\x18\x01 \x01(\x0b\x32\x16.ast.SpWindowSpecEmptyH\x00\x12;\n\x17sp_window_spec_order_by\x18\x02 \x01(\x0b\x32\x18.ast.SpWindowSpecOrderByH\x00\x12\x43\n\x1bsp_window_spec_partition_by\x18\x03 \x01(\x0b\x32\x1c.ast.SpWindowSpecPartitionByH\x00\x12\x45\n\x1csp_window_spec_range_between\x18\x04 \x01(\x0b\x32\x1d.ast.SpWindowSpecRangeBetweenH\x00\x12\x43\n\x1bsp_window_spec_rows_between\x18\x05 \x01(\x0b\x32\x1c.ast.SpWindowSpecRowsBetweenH\x00\x42\t\n\x07variant\"q\n\x13SpWindowSpecOrderBy\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\"\n\x03wnd\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"u\n\x17SpWindowSpecPartitionBy\x12\x17\n\x04\x63ols\x18\x01 \x03(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12\"\n\x03wnd\x18\x03 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"\xb7\x01\n\x18SpWindowSpecRangeBetween\x12*\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12,\n\x05start\x18\x03 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\"\n\x03wnd\x18\x04 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"\xb6\x01\n\x17SpWindowSpecRowsBetween\x12*\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\x12,\n\x05start\x18\x03 \x01(\x0b\x32\x1d.ast.SpWindowRelativePosition\x12\"\n\x03wnd\x18\x04 \x01(\x0b\x32\x15.ast.SpWindowSpecExpr\"\xab\x03\n\x17SpWriteCopyIntoLocation\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x36\n\x10\x66ile_format_name\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x36\n\x10\x66ile_format_type\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x35\n\x13\x66ormat_type_options\x18\x05 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x06 \x01(\x08\x12\x16\n\x02id\x18\x07 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x08 \x01(\t\x12\x1f\n\x0cpartition_by\x18\t \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\n \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x0b \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xae\x02\n\nSpWriteCsv\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xe2\x01\n\x0bSpWriteFile\x12\x43\n\x1bsp_write_copy_into_location\x18\x01 \x01(\x0b\x32\x1c.ast.SpWriteCopyIntoLocationH\x00\x12\'\n\x0csp_write_csv\x18\x02 \x01(\x0b\x32\x0f.ast.SpWriteCsvH\x00\x12)\n\rsp_write_json\x18\x03 \x01(\x0b\x32\x10.ast.SpWriteJsonH\x00\x12/\n\x10sp_write_parquet\x18\x04 \x01(\x0b\x32\x13.ast.SpWriteParquetH\x00\x42\t\n\x07variant\"\xaf\x02\n\x0bSpWriteJson\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xfe\x02\n\rSpWritePandas\x12\x19\n\x11\x61uto_create_table\x18\x01 \x01(\x08\x12/\n\nchunk_size\x18\x02 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x13\n\x0b\x63ompression\x18\x03 \x01(\t\x12\x19\n\x11\x63reate_temp_table\x18\x04 \x01(\x08\x12 \n\x02\x64\x66\x18\x05 \x01(\x0b\x32\x14.ast.SpDataframeData\x12&\n\x06kwargs\x18\x06 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x10\n\x08on_error\x18\x07 \x01(\t\x12\x11\n\toverwrite\x18\x08 \x01(\x08\x12\x10\n\x08parallel\x18\t \x01(\x03\x12\x19\n\x11quote_identifiers\x18\n \x01(\x08\x12\x1d\n\x03src\x18\x0b \x01(\x0b\x32\x10.ast.SrcPosition\x12\"\n\ntable_name\x18\x0c \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x12\n\ntable_type\x18\r \x01(\t\"\xb2\x02\n\x0eSpWriteParquet\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12,\n\x0c\x63opy_options\x18\x02 \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x35\n\x13\x66ormat_type_options\x18\x03 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06header\x18\x04 \x01(\x08\x12\x16\n\x02id\x18\x05 \x01(\x0b\x32\n.ast.VarId\x12\x10\n\x08location\x18\x06 \x01(\t\x12\x1f\n\x0cpartition_by\x18\x07 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x08 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\t \x03(\x0b\x32\x18.ast.Tuple_String_String\"\x99\x05\n\x0cSpWriteTable\x12\r\n\x05\x62lock\x18\x01 \x01(\x08\x12\x33\n\x0f\x63hange_tracking\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\'\n\x0f\x63lustering_keys\x18\x03 \x01(\x0b\x32\x0e.ast.List_Expr\x12\x14\n\x0c\x63olumn_order\x18\x04 \x01(\t\x12-\n\x07\x63omment\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x13\n\x0b\x63opy_grants\x18\x06 \x01(\x08\x12\x19\n\x11\x63reate_temp_table\x18\x07 \x01(\x08\x12\x38\n\x13\x64\x61ta_retention_time\x18\x08 \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12;\n\x17\x65nable_schema_evolution\x18\t \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x30\n\x0eiceberg_config\x18\n \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x16\n\x02id\x18\x0b \x01(\x0b\x32\n.ast.VarId\x12<\n\x17max_data_extension_time\x18\x0c \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1d\n\x04mode\x18\r \x01(\x0b\x32\x0f.ast.SpSaveMode\x12\x1d\n\x03src\x18\x0e \x01(\x0b\x32\x10.ast.SrcPosition\x12\x32\n\x10statement_params\x18\x0f \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\"\n\ntable_name\x18\x10 \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x12\n\ntable_type\x18\x11 \x01(\t\"y\n\x04Stmt\x12\x1d\n\x06\x61ssign\x18\x01 \x01(\x0b\x32\x0b.ast.AssignH\x00\x12\x19\n\x04\x65val\x18\x02 \x01(\x0b\x32\t.ast.EvalH\x00\x12,\n\x0e\x65xtension_stmt\x18\x03 \x01(\x0b\x32\x12.ast.ExtensionStmtH\x00\x42\t\n\x07variant\"\xac\x05\n\x0fStoredProcedure\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x12\n\nexecute_as\x18\x02 \x01(\t\x12$\n\x1c\x65xternal_access_integrations\x18\x03 \x03(\t\x12\x1d\n\x04\x66unc\x18\x04 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x05 \x01(\x08\x12\x1f\n\x07imports\x18\x06 \x03(\x0b\x32\x0e.ast.SpNameRef\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x34\n\x10log_on_exception\x18\n \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x1c\n\x04name\x18\x0b \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x10\n\x08packages\x18\x0c \x03(\t\x12\x10\n\x08parallel\x18\r \x01(\x03\x12\x0f\n\x07replace\x18\x0e \x01(\x08\x12$\n\x0breturn_type\x18\x0f \x01(\x0b\x32\x0f.ast.SpDataType\x12)\n\x07secrets\x18\x10 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x1b\n\x13source_code_display\x18\x11 \x01(\x08\x12\x1d\n\x03src\x18\x12 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0estage_location\x18\x13 \x01(\t\x12\x32\n\x10statement_params\x18\x14 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06strict\x18\x15 \x01(\x08\"5\n\tStringVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\t\n\x01v\x18\x02 \x01(\t\"T\n\x03Sub\x12\x16\n\x03lhs\x18\x01 \x01(\x0b\x32\t.ast.Expr\x12\x16\n\x03rhs\x18\x02 \x01(\x0b\x32\t.ast.Expr\x12\x1d\n\x03src\x18\x03 \x01(\x0b\x32\x10.ast.SrcPosition\"Q\n\x16TruncatedDataframeExpr\x12\x18\n\x04self\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"H\n\rTruncatedExpr\x12\x18\n\x04self\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"b\n\'TruncatedRelationalGroupedDataframeExpr\x12\x18\n\x04self\x18\x01 \x01(\x0b\x32\n.ast.VarId\x12\x1d\n\x03src\x18\x02 \x01(\x0b\x32\x10.ast.SrcPosition\"@\n\x08TupleVal\x12\x1d\n\x03src\x18\x01 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x15\n\x02vs\x18\x02 \x03(\x0b\x32\t.ast.Expr\"\xde\x04\n\x04Udaf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12 \n\x07handler\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12\x1f\n\x07imports\x18\x06 \x03(\x0b\x32\x0e.ast.SpNameRef\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x1c\n\x04name\x18\n \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x10\n\x08packages\x18\x0b \x03(\t\x12\x10\n\x08parallel\x18\x0c \x01(\x03\x12\x0f\n\x07replace\x18\r \x01(\x08\x12$\n\x0breturn_type\x18\x0e \x01(\x0b\x32\x0f.ast.SpDataType\x12)\n\x07secrets\x18\x0f \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x1d\n\x03src\x18\x10 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x34\n\x0estage_location\x18\x11 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x32\n\x10statement_params\x18\x12 \x03(\x0b\x32\x18.ast.Tuple_String_String\"\xae\x05\n\x03Udf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12\x1d\n\x04\x66unc\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12\x1f\n\x07imports\x18\x06 \x03(\x0b\x32\x0e.ast.SpNameRef\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x33\n\x0emax_batch_size\x18\n \x01(\x0b\x32\x1b.google.protobuf.Int64Value\x12\x1c\n\x04name\x18\x0b \x01(\x0b\x32\x0e.ast.SpNameRef\x12\x10\n\x08packages\x18\x0c \x03(\t\x12\x10\n\x08parallel\x18\r \x01(\x03\x12\x0f\n\x07replace\x18\x0e \x01(\x08\x12$\n\x0breturn_type\x18\x0f \x01(\x0b\x32\x0f.ast.SpDataType\x12)\n\x07secrets\x18\x10 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06secure\x18\x11 \x01(\x08\x12\x1b\n\x13source_code_display\x18\x12 \x01(\x08\x12\x1d\n\x03src\x18\x13 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0estage_location\x18\x14 \x01(\t\x12\x32\n\x10statement_params\x18\x15 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06strict\x18\x16 \x01(\x08\"\xe2\x04\n\x04Udtf\x12-\n\x07\x63omment\x18\x01 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12$\n\x1c\x65xternal_access_integrations\x18\x02 \x03(\t\x12 \n\x07handler\x18\x03 \x01(\x0b\x32\x0f.ast.SpCallable\x12\x15\n\rif_not_exists\x18\x04 \x01(\x08\x12\x11\n\timmutable\x18\x05 \x01(\x08\x12\x1f\n\x07imports\x18\x06 \x03(\x0b\x32\x0e.ast.SpNameRef\x12)\n\x0binput_types\x18\x07 \x01(\x0b\x32\x14.ast.List_SpDataType\x12\x14\n\x0cis_permanent\x18\x08 \x01(\x08\x12&\n\x06kwargs\x18\t \x03(\x0b\x32\x16.ast.Tuple_String_Expr\x12\x1c\n\x04name\x18\n \x01(\x0b\x32\x0e.ast.SpNameRef\x12&\n\routput_schema\x18\x0b \x01(\x0b\x32\x0f.ast.UdtfSchema\x12\x10\n\x08packages\x18\x0c \x03(\t\x12\x10\n\x08parallel\x18\r \x01(\x03\x12\x0f\n\x07replace\x18\x0e \x01(\x08\x12)\n\x07secrets\x18\x0f \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06secure\x18\x10 \x01(\x08\x12\x1d\n\x03src\x18\x11 \x01(\x0b\x32\x10.ast.SrcPosition\x12\x16\n\x0estage_location\x18\x12 \x01(\t\x12\x32\n\x10statement_params\x18\x13 \x03(\x0b\x32\x18.ast.Tuple_String_String\x12\x0e\n\x06strict\x18\x14 \x01(\x08\"F\n\x07UnaryOp\x12\x17\n\x03neg\x18\x01 \x01(\x0b\x32\x08.ast.NegH\x00\x12\x17\n\x03not\x18\x02 \x01(\x0b\x32\x08.ast.NotH\x00\x42\t\n\x07variant*8\n\x0b__Version__\x12\x18\n\x14PROTO3_REQUIRES_THIS\x10\x00\x12\x0f\n\x0bMAX_VERSION\x10\x01\x42)\n\x1c\x63om.snowflake.snowpark.protoB\tJavaProtob\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ast_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\034com.snowflake.snowpark.protoB\tJavaProto'
  _INTERNEDVALUETABLE_STRINGVALUESENTRY._options = None
  _INTERNEDVALUETABLE_STRINGVALUESENTRY._serialized_options = b'8\001'
  ___VERSION__._serialized_start=69753
  ___VERSION__._serialized_end=69809
  _INTERNEDVALUETABLE._serialized_start=51
  _INTERNEDVALUETABLE._serialized_end=190
  _INTERNEDVALUETABLE_STRINGVALUESENTRY._serialized_start=139
  _INTERNEDVALUETABLE_STRINGVALUESENTRY._serialized_end=190
  _LIST_EXPR._serialized_start=192
  _LIST_EXPR._serialized_end=228
  _LIST_SPDATATYPE._serialized_start=230
  _LIST_SPDATATYPE._serialized_end=278
  _LIST_SPSTRUCTFIELD._serialized_start=280
  _LIST_SPSTRUCTFIELD._serialized_end=334
  _LIST_STRING._serialized_start=336
  _LIST_STRING._serialized_end=363
  _MAP_EXPR_EXPR._serialized_start=365
  _MAP_EXPR_EXPR._serialized_end=416
  _MAP_STRING_EXPR._serialized_start=418
  _MAP_STRING_EXPR._serialized_end=473
  _TUPLE_EXPR_EXPR._serialized_start=475
  _TUPLE_EXPR_EXPR._serialized_end=538
  _TUPLE_EXPR_FLOAT._serialized_start=540
  _TUPLE_EXPR_FLOAT._serialized_end=593
  _TUPLE_STRING_EXPR._serialized_start=595
  _TUPLE_STRING_EXPR._serialized_end=649
  _TUPLE_STRING_LIST_STRING._serialized_start=651
  _TUPLE_STRING_LIST_STRING._serialized_end=701
  _TUPLE_STRING_STRING._serialized_start=703
  _TUPLE_STRING_STRING._serialized_end=748
  _LANGUAGE._serialized_start=751
  _LANGUAGE._serialized_end=915
  _PYTHONLANGUAGE._serialized_start=917
  _PYTHONLANGUAGE._serialized_end=964
  _SCALALANGUAGE._serialized_start=966
  _SCALALANGUAGE._serialized_end=1012
  _JAVALANGUAGE._serialized_start=1014
  _JAVALANGUAGE._serialized_end=1059
  _PYTHONTIMEZONE._serialized_start=1061
  _PYTHONTIMEZONE._serialized_end=1145
  _SPCALLABLE._serialized_start=1147
  _SPCALLABLE._serialized_end=1222
  _SPCOLUMNALIASFN._serialized_start=1225
  _SPCOLUMNALIASFN._serialized_end=1357
  _SPCOLUMNREF._serialized_start=1360
  _SPCOLUMNREF._serialized_end=1491
  _SPCOLUMNIDENTIFIER._serialized_start=1493
  _SPCOLUMNIDENTIFIER._serialized_end=1527
  _SPCOLUMNNAME._serialized_start=1529
  _SPCOLUMNNAME._serialized_end=1557
  _SPDATATYPE._serialized_start=1560
  _SPDATATYPE._serialized_end=2428
  _SPARRAYTYPE._serialized_start=2430
  _SPARRAYTYPE._serialized_end=2492
  _SPDECIMALTYPE._serialized_start=2494
  _SPDECIMALTYPE._serialized_end=2543
  _SPMAPTYPE._serialized_start=2545
  _SPMAPTYPE._serialized_end=2644
  _SPSTRINGTYPE._serialized_start=2646
  _SPSTRINGTYPE._serialized_end=2705
  _SPSTRUCTFIELD._serialized_start=2707
  _SPSTRUCTFIELD._serialized_end=2821
  _SPSTRUCTTYPE._serialized_start=2823
  _SPSTRUCTTYPE._serialized_end=2898
  _SPTIMESTAMPTYPE._serialized_start=2900
  _SPTIMESTAMPTYPE._serialized_end=2962
  _SPVECTORTYPE._serialized_start=2964
  _SPVECTORTYPE._serialized_end=3026
  _SPPANDASSERIESTYPE._serialized_start=3028
  _SPPANDASSERIESTYPE._serialized_end=3080
  _SPPANDASDATAFRAMETYPE._serialized_start=3082
  _SPPANDASDATAFRAMETYPE._serialized_end=3160
  _SPDATAFRAMEDATA._serialized_start=3163
  _SPDATAFRAMEDATA._serialized_end=3388
  _SPDATAFRAMEDATA_LIST._serialized_start=3390
  _SPDATAFRAMEDATA_LIST._serialized_end=3435
  _SPDATAFRAMEDATA_TUPLE._serialized_start=3437
  _SPDATAFRAMEDATA_TUPLE._serialized_end=3483
  _SPDATAFRAMEDATA_PANDAS._serialized_start=3485
  _SPDATAFRAMEDATA_PANDAS._serialized_end=3548
  _SPDATAFRAMESCHEMA._serialized_start=3551
  _SPDATAFRAMESCHEMA._serialized_end=3722
  _SPDATAFRAMESCHEMA_LIST._serialized_start=3724
  _SPDATAFRAMESCHEMA_LIST._serialized_end=3760
  _SPDATAFRAMESCHEMA_STRUCT._serialized_start=3762
  _SPDATAFRAMESCHEMA_STRUCT._serialized_end=3818
  _SPFLATTENMODE._serialized_start=3820
  _SPFLATTENMODE._serialized_end=3945
  _SPJOINTYPE._serialized_start=3948
  _SPJOINTYPE._serialized_end=4242
  _SPNAME._serialized_start=4244
  _SPNAME._serialized_end=4362
  _SPNAMEFLAT._serialized_start=4364
  _SPNAMEFLAT._serialized_end=4390
  _SPNAMESTRUCTURED._serialized_start=4392
  _SPNAMESTRUCTURED._serialized_end=4424
  _SPNULLORDER._serialized_start=4427
  _SPNULLORDER._serialized_end=4557
  _SPPIVOTVALUE._serialized_start=4560
  _SPPIVOTVALUE._serialized_end=4712
  _SPPIVOTVALUE_EXPR._serialized_start=4714
  _SPPIVOTVALUE_EXPR._serialized_end=4755
  _SPPIVOTVALUE_DATAFRAME._serialized_start=4757
  _SPPIVOTVALUE_DATAFRAME._serialized_end=4813
  _SPSAVEMODE._serialized_start=4816
  _SPSAVEMODE._serialized_end=5008
  _SPTABLEVARIANT._serialized_start=5010
  _SPTABLEVARIANT._serialized_end=5090
  _SPTIMESTAMPTIMEZONE._serialized_start=5093
  _SPTIMESTAMPTIMEZONE._serialized_end=5280
  _SPWINDOWRELATIVEPOSITION._serialized_start=5283
  _SPWINDOWRELATIVEPOSITION._serialized_end=5581
  _SPWINDOWRELATIVEPOSITION_POSITION._serialized_start=5583
  _SPWINDOWRELATIVEPOSITION_POSITION._serialized_end=5640
  _SRCPOSITION._serialized_start=5642
  _SRCPOSITION._serialized_end=5749
  _STAGEDPANDASDATAFRAME._serialized_start=5751
  _STAGEDPANDASDATAFRAME._serialized_end=5810
  _UDTFSCHEMA._serialized_start=5813
  _UDTFSCHEMA._serialized_end=5945
  _UDTFSCHEMA_TYPE._serialized_start=5947
  _UDTFSCHEMA_TYPE._serialized_end=6002
  _UDTFSCHEMA_NAMES._serialized_start=6004
  _UDTFSCHEMA_NAMES._serialized_end=6038
  _VARID._serialized_start=6040
  _VARID._serialized_end=6066
  _VERSION._serialized_start=6068
  _VERSION._serialized_end=6137
  _ABSTRACTEXTENSION._serialized_start=6140
  _ABSTRACTEXTENSION._serialized_end=6604
  _ABSTRACTEXTENSIONEXPR._serialized_start=6607
  _ABSTRACTEXTENSIONEXPR._serialized_end=6853
  _ABSTRACTTRUNCATEDEXPR._serialized_start=6856
  _ABSTRACTTRUNCATEDEXPR._serialized_end=7102
  _ADD._serialized_start=7104
  _ADD._serialized_end=7188
  _AND._serialized_start=7190
  _AND._serialized_end=7274
  _APPLYEXPR._serialized_start=7277
  _APPLYEXPR._serialized_end=7420
  _ASSIGN._serialized_start=7422
  _ASSIGN._serialized_end=7542
  _BIGDECIMALVAL._serialized_start=7545
  _BIGDECIMALVAL._serialized_end=7677
  _BIGINTVAL._serialized_start=7679
  _BIGINTVAL._serialized_end=7732
  _BINOP._serialized_start=7735
  _BINOP._serialized_end=8189
  _BINARYVAL._serialized_start=8191
  _BINARYVAL._serialized_end=8244
  _BITAND._serialized_start=8246
  _BITAND._serialized_end=8333
  _BITOR._serialized_start=8335
  _BITOR._serialized_end=8421
  _BITXOR._serialized_start=8423
  _BITXOR._serialized_end=8510
  _BOOLVAL._serialized_start=8512
  _BOOLVAL._serialized_end=8563
  _BUILTINFN._serialized_start=8565
  _BUILTINFN._serialized_end=8637
  _CALLTABLEFUNCTIONEXPR._serialized_start=8639
  _CALLTABLEFUNCTIONEXPR._serialized_end=8723
  _CONST._serialized_start=8726
  _CONST._serialized_end=9294
  _DIV._serialized_start=9296
  _DIV._serialized_end=9380
  _EQ._serialized_start=9382
  _EQ._serialized_end=9465
  _ERROR._serialized_start=9468
  _ERROR._serialized_end=9606
  _EVAL._serialized_start=9608
  _EVAL._serialized_end=9655
  _EVALOK._serialized_start=9657
  _EVALOK._serialized_end=9737
  _EVALRESULT._serialized_start=9740
  _EVALRESULT._serialized_end=10494
  _EXPR._serialized_start=10497
  _EXPR._serialized_end=20845
  _EXPRARGLIST._serialized_start=20847
  _EXPRARGLIST._serialized_end=20903
  _EXTENSIONDATAFRAMEEXPR._serialized_start=20905
  _EXTENSIONDATAFRAMEEXPR._serialized_end=21013
  _EXTENSIONERROR._serialized_start=21015
  _EXTENSIONERROR._serialized_end=21125
  _EXTENSIONEVALRESULT._serialized_start=21127
  _EXTENSIONEVALRESULT._serialized_end=21201
  _EXTENSIONEXPR._serialized_start=21203
  _EXTENSIONEXPR._serialized_end=21302
  _EXTENSIONRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start=21304
  _EXTENSIONRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end=21429
  _EXTENSIONSTMT._serialized_start=21431
  _EXTENSIONSTMT._serialized_end=21499
  _FLOAT64VAL._serialized_start=21501
  _FLOAT64VAL._serialized_end=21555
  _FNIDREFEXPR._serialized_start=21557
  _FNIDREFEXPR._serialized_end=21679
  _FNNAMEREFEXPR._serialized_start=21682
  _FNNAMEREFEXPR._serialized_end=22006
  _FNREFEXPR._serialized_start=22009
  _FNREFEXPR._serialized_end=22531
  _GEQ._serialized_start=22533
  _GEQ._serialized_end=22617
  _GT._serialized_start=22619
  _GT._serialized_end=22702
  _HASSRCPOSITION._serialized_start=22705
  _HASSRCPOSITION._serialized_end=33989
  _INDIRECTTABLEFNIDREF._serialized_start=33991
  _INDIRECTTABLEFNIDREF._serialized_end=34068
  _INDIRECTTABLEFNNAMEREF._serialized_start=34070
  _INDIRECTTABLEFNNAMEREF._serialized_end=34155
  _INT64VAL._serialized_start=34157
  _INT64VAL._serialized_end=34209
  _LEQ._serialized_start=34211
  _LEQ._serialized_end=34295
  _LISTVAL._serialized_start=34297
  _LISTVAL._serialized_end=34360
  _LT._serialized_start=34362
  _LT._serialized_end=34445
  _MOD._serialized_start=34447
  _MOD._serialized_end=34531
  _MUL._serialized_start=34533
  _MUL._serialized_end=34617
  _NEG._serialized_start=34619
  _NEG._serialized_end=34683
  _NEQ._serialized_start=34685
  _NEQ._serialized_end=34769
  _NOT._serialized_start=34771
  _NOT._serialized_end=34835
  _NULLVAL._serialized_start=34837
  _NULLVAL._serialized_end=34877
  _OBJECTGETITEM._serialized_start=34879
  _OBJECTGETITEM._serialized_end=34975
  _OR._serialized_start=34977
  _OR._serialized_end=35060
  _POW._serialized_start=35062
  _POW._serialized_end=35146
  _PYTHONDATEVAL._serialized_start=35148
  _PYTHONDATEVAL._serialized_end=35236
  _PYTHONTIMEVAL._serialized_start=35239
  _PYTHONTIMEVAL._serialized_end=35385
  _PYTHONTIMESTAMPVAL._serialized_start=35388
  _PYTHONTIMESTAMPVAL._serialized_end=35581
  _REDACTEDCONST._serialized_start=35583
  _REDACTEDCONST._serialized_end=35662
  _REQUEST._serialized_start=35665
  _REQUEST._serialized_end=35860
  _RESPONSE._serialized_start=35862
  _RESPONSE._serialized_end=35954
  _RESULT._serialized_start=35957
  _RESULT._serialized_end=36163
  _SEQMAPVAL._serialized_start=36165
  _SEQMAPVAL._serialized_end=36235
  _SESSIONRESETREQUIREDERROR._serialized_start=36237
  _SESSIONRESETREQUIREDERROR._serialized_end=36305
  _SFQUERYRESULT._serialized_start=36307
  _SFQUERYRESULT._serialized_end=36336
  _SHOWRESULT._serialized_start=36338
  _SHOWRESULT._serialized_end=36350
  _SPCASEEXPR._serialized_start=36352
  _SPCASEEXPR._serialized_end=36451
  _SPCOLUMNALIAS._serialized_start=36453
  _SPCOLUMNALIAS._serialized_end=36571
  _SPCOLUMNAPPLY_INT._serialized_start=36573
  _SPCOLUMNAPPLY_INT._serialized_end=36660
  _SPCOLUMNAPPLY_STRING._serialized_start=36662
  _SPCOLUMNAPPLY_STRING._serialized_end=36754
  _SPCOLUMNASC._serialized_start=36756
  _SPCOLUMNASC._serialized_end=36862
  _SPCOLUMNBETWEEN._serialized_start=36865
  _SPCOLUMNBETWEEN._serialized_end=37001
  _SPCOLUMNCASEWHEN._serialized_start=37003
  _SPCOLUMNCASEWHEN._serialized_end=37084
  _SPCOLUMNCAST._serialized_start=37086
  _SPCOLUMNCAST._serialized_end=37184
  _SPCOLUMNDESC._serialized_start=37186
  _SPCOLUMNDESC._serialized_end=37293
  _SPCOLUMNEQUALNAN._serialized_start=37295
  _SPCOLUMNEQUALNAN._serialized_end=37368
  _SPCOLUMNEQUALNULL._serialized_start=37370
  _SPCOLUMNEQUALNULL._serialized_end=37468
  _SPCOLUMNFN._serialized_start=37471
  _SPCOLUMNFN._serialized_end=38652
  _SPCOLUMNIN._serialized_start=38654
  _SPCOLUMNIN._serialized_end=38748
  _SPCOLUMNISNOTNULL._serialized_start=38750
  _SPCOLUMNISNOTNULL._serialized_end=38824
  _SPCOLUMNISNULL._serialized_start=38826
  _SPCOLUMNISNULL._serialized_end=38897
  _SPCOLUMNOVER._serialized_start=38899
  _SPCOLUMNOVER._serialized_end=39012
  _SPCOLUMNSQLEXPR._serialized_start=39014
  _SPCOLUMNSQLEXPR._serialized_end=39123
  _SPCOLUMNSTRINGCOLLATE._serialized_start=39125
  _SPCOLUMNSTRINGCOLLATE._serialized_end=39238
  _SPCOLUMNSTRINGCONTAINS._serialized_start=39240
  _SPCOLUMNSTRINGCONTAINS._serialized_end=39347
  _SPCOLUMNSTRINGENDSWITH._serialized_start=39349
  _SPCOLUMNSTRINGENDSWITH._serialized_end=39455
  _SPCOLUMNSTRINGLIKE._serialized_start=39457
  _SPCOLUMNSTRINGLIKE._serialized_end=39560
  _SPCOLUMNSTRINGREGEXP._serialized_start=39563
  _SPCOLUMNSTRINGREGEXP._serialized_end=39699
  _SPCOLUMNSTRINGSTARTSWITH._serialized_start=39701
  _SPCOLUMNSTRINGSTARTSWITH._serialized_end=39809
  _SPCOLUMNSTRINGSUBSTR._serialized_start=39811
  _SPCOLUMNSTRINGSUBSTR._serialized_end=39936
  _SPCOLUMNTRYCAST._serialized_start=39938
  _SPCOLUMNTRYCAST._serialized_end=40039
  _SPCOLUMNWITHINGROUP._serialized_start=40041
  _SPCOLUMNWITHINGROUP._serialized_end=40149
  _SPCREATEDATAFRAME._serialized_start=40151
  _SPCREATEDATAFRAME._serialized_end=40277
  _SPDATAFRAMEAGG._serialized_start=40279
  _SPDATAFRAMEAGG._serialized_end=40393
  _SPDATAFRAMEALIAS._serialized_start=40395
  _SPDATAFRAMEALIAS._serialized_end=40492
  _SPDATAFRAMEANALYTICSCOMPUTELAG._serialized_start=40495
  _SPDATAFRAMEANALYTICSCOMPUTELAG._serialized_end=40696
  _SPDATAFRAMEANALYTICSCOMPUTELEAD._serialized_start=40699
  _SPDATAFRAMEANALYTICSCOMPUTELEAD._serialized_end=40902
  _SPDATAFRAMEANALYTICSCUMULATIVEAGG._serialized_start=40905
  _SPDATAFRAMEANALYTICSCUMULATIVEAGG._serialized_end=41135
  _SPDATAFRAMEANALYTICSMOVINGAGG._serialized_start=41138
  _SPDATAFRAMEANALYTICSMOVINGAGG._serialized_end=41366
  _SPDATAFRAMEANALYTICSTIMESERIESAGG._serialized_start=41369
  _SPDATAFRAMEANALYTICSTIMESERIESAGG._serialized_end=41622
  _SPDATAFRAMECACHERESULT._serialized_start=41625
  _SPDATAFRAMECACHERESULT._serialized_end=41766
  _SPDATAFRAMECOL._serialized_start=41768
  _SPDATAFRAMECOL._serialized_end=41867
  _SPDATAFRAMECOLLECT._serialized_start=41870
  _SPDATAFRAMECOLLECT._serialized_end=42079
  _SPDATAFRAMECOPYINTOTABLE._serialized_start=42082
  _SPDATAFRAMECOPYINTOTABLE._serialized_end=42587
  _SPDATAFRAMECOUNT._serialized_start=42590
  _SPDATAFRAMECOUNT._serialized_end=42730
  _SPDATAFRAMECREATEORREPLACEDYNAMICTABLE._serialized_start=42733
  _SPDATAFRAMECREATEORREPLACEDYNAMICTABLE._serialized_end=43315
  _SPDATAFRAMECREATEORREPLACEVIEW._serialized_start=43318
  _SPDATAFRAMECREATEORREPLACEVIEW._serialized_end=43561
  _SPDATAFRAMECROSSJOIN._serialized_start=43564
  _SPDATAFRAMECROSSJOIN._serialized_end=43781
  _SPDATAFRAMECUBE._serialized_start=43783
  _SPDATAFRAMECUBE._serialized_end=43897
  _SPDATAFRAMEDESCRIBE._serialized_start=43899
  _SPDATAFRAMEDESCRIBE._serialized_end=44017
  _SPDATAFRAMEDISTINCT._serialized_start=44019
  _SPDATAFRAMEDISTINCT._serialized_end=44105
  _SPDATAFRAMEDROP._serialized_start=44107
  _SPDATAFRAMEDROP._serialized_end=44221
  _SPDATAFRAMEDROPDUPLICATES._serialized_start=44223
  _SPDATAFRAMEDROPDUPLICATES._serialized_end=44347
  _SPDATAFRAMEEXCEPT._serialized_start=44349
  _SPDATAFRAMEEXCEPT._serialized_end=44470
  _SPDATAFRAMEEXPR._serialized_start=44473
  _SPDATAFRAMEEXPR._serialized_end=49250
  _SPDATAFRAMEFILTER._serialized_start=49252
  _SPDATAFRAMEFILTER._serialized_end=49366
  _SPDATAFRAMEFIRST._serialized_start=49369
  _SPDATAFRAMEFIRST._serialized_end=49532
  _SPDATAFRAMEFLATTEN._serialized_start=49535
  _SPDATAFRAMEFLATTEN._serialized_end=49758
  _SPDATAFRAMEGROUPBY._serialized_start=49760
  _SPDATAFRAMEGROUPBY._serialized_end=49877
  _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_start=49880
  _SPDATAFRAMEGROUPBYGROUPINGSETS._serialized_end=50018
  _SPDATAFRAMEINTERSECT._serialized_start=50020
  _SPDATAFRAMEINTERSECT._serialized_end=50144
  _SPDATAFRAMEJOIN._serialized_start=50147
  _SPDATAFRAMEJOIN._serialized_end=50461
  _SPDATAFRAMEJOINTABLEFUNCTION._serialized_start=50463
  _SPDATAFRAMEJOINTABLEFUNCTION._serialized_end=50582
  _SPDATAFRAMELIMIT._serialized_start=50584
  _SPDATAFRAMELIMIT._serialized_end=50694
  _SPDATAFRAMENADROP_PYTHON._serialized_start=50697
  _SPDATAFRAMENADROP_PYTHON._serialized_end=50880
  _SPDATAFRAMENADROP_SCALA._serialized_start=50883
  _SPDATAFRAMENADROP_SCALA._serialized_end=51018
  _SPDATAFRAMENAFILL._serialized_start=51021
  _SPDATAFRAMENAFILL._serialized_end=51206
  _SPDATAFRAMENAREPLACE._serialized_start=51209
  _SPDATAFRAMENAREPLACE._serialized_end=51511
  _SPDATAFRAMENATURALJOIN._serialized_start=51514
  _SPDATAFRAMENATURALJOIN._serialized_end=51675
  _SPDATAFRAMEPIVOT._serialized_start=51678
  _SPDATAFRAMEPIVOT._serialized_end=51862
  _SPDATAFRAMERANDOMSPLIT._serialized_start=51865
  _SPDATAFRAMERANDOMSPLIT._serialized_end=52066
  _SPDATAFRAMEREADER._serialized_start=52069
  _SPDATAFRAMEREADER._serialized_end=52450
  _SPDATAFRAMEREADERINIT._serialized_start=52452
  _SPDATAFRAMEREADERINIT._serialized_end=52506
  _SPDATAFRAMEREADEROPTION._serialized_start=52509
  _SPDATAFRAMEREADEROPTION._serialized_end=52644
  _SPDATAFRAMEREADEROPTIONS._serialized_start=52647
  _SPDATAFRAMEREADEROPTIONS._serialized_end=52785
  _SPDATAFRAMEREADERSCHEMA._serialized_start=52788
  _SPDATAFRAMEREADERSCHEMA._serialized_end=52919
  _SPDATAFRAMEREADERWITHMETADATA._serialized_start=52922
  _SPDATAFRAMEREADERWITHMETADATA._serialized_end=53068
  _SPDATAFRAMEREF._serialized_start=53070
  _SPDATAFRAMEREF._serialized_end=53141
  _SPDATAFRAMERENAME._serialized_start=53144
  _SPDATAFRAMERENAME._serialized_end=53312
  _SPDATAFRAMEROLLUP._serialized_start=53314
  _SPDATAFRAMEROLLUP._serialized_end=53430
  _SPDATAFRAMESAMPLE._serialized_start=53433
  _SPDATAFRAMESAMPLE._serialized_end=53619
  _SPDATAFRAMESELECT_COLUMNS._serialized_start=53621
  _SPDATAFRAMESELECT_COLUMNS._serialized_end=53745
  _SPDATAFRAMESELECT_EXPRS._serialized_start=53747
  _SPDATAFRAMESELECT_EXPRS._serialized_end=53870
  _SPDATAFRAMESHOW._serialized_start=53872
  _SPDATAFRAMESHOW._serialized_end=53955
  _SPDATAFRAMESORT._serialized_start=53958
  _SPDATAFRAMESORT._serialized_end=54102
  _SPDATAFRAMESTATAPPROXQUANTILE._serialized_start=54105
  _SPDATAFRAMESTATAPPROXQUANTILE._serialized_end=54288
  _SPDATAFRAMESTATCORR._serialized_start=54291
  _SPDATAFRAMESTATCORR._serialized_end=54469
  _SPDATAFRAMESTATCOV._serialized_start=54472
  _SPDATAFRAMESTATCOV._serialized_end=54649
  _SPDATAFRAMESTATCROSSTAB._serialized_start=54652
  _SPDATAFRAMESTATCROSSTAB._serialized_end=54834
  _SPDATAFRAMESTATSAMPLEBY._serialized_start=54837
  _SPDATAFRAMESTATSAMPLEBY._serialized_end=54993
  _SPDATAFRAMETODF._serialized_start=54995
  _SPDATAFRAMETODF._serialized_end=55114
  _SPDATAFRAMETOLOCALITERATOR._serialized_start=55117
  _SPDATAFRAMETOLOCALITERATOR._serialized_end=55291
  _SPDATAFRAMETOPANDAS._serialized_start=55294
  _SPDATAFRAMETOPANDAS._serialized_end=55437
  _SPDATAFRAMETOPANDASBATCHES._serialized_start=55440
  _SPDATAFRAMETOPANDASBATCHES._serialized_end=55590
  _SPDATAFRAMEUNION._serialized_start=55592
  _SPDATAFRAMEUNION._serialized_end=55712
  _SPDATAFRAMEUNIONALL._serialized_start=55714
  _SPDATAFRAMEUNIONALL._serialized_end=55837
  _SPDATAFRAMEUNIONALLBYNAME._serialized_start=55840
  _SPDATAFRAMEUNIONALLBYNAME._serialized_end=55969
  _SPDATAFRAMEUNIONBYNAME._serialized_start=55971
  _SPDATAFRAMEUNIONBYNAME._serialized_end=56097
  _SPDATAFRAMEUNPIVOT._serialized_start=56100
  _SPDATAFRAMEUNPIVOT._serialized_end=56283
  _SPDATAFRAMEWITHCOLUMN._serialized_start=56286
  _SPDATAFRAMEWITHCOLUMN._serialized_end=56416
  _SPDATAFRAMEWITHCOLUMNRENAMED._serialized_start=56419
  _SPDATAFRAMEWITHCOLUMNRENAMED._serialized_end=56556
  _SPDATAFRAMEWITHCOLUMNS._serialized_start=56559
  _SPDATAFRAMEWITHCOLUMNS._serialized_end=56694
  _SPDATAFRAMEWRITE._serialized_start=56697
  _SPDATAFRAMEWRITE._serialized_end=56890
  _SPDATAFRAMEWRITER._serialized_start=56893
  _SPDATAFRAMEWRITER._serialized_end=57219
  _SPDATATYPEVAL._serialized_start=57221
  _SPDATATYPEVAL._serialized_end=57302
  _SPFLATTEN._serialized_start=57305
  _SPFLATTEN._serialized_end=57485
  _SPFNREF._serialized_start=57487
  _SPFNREF._serialized_end=57551
  _SPGENERATOR._serialized_start=57553
  _SPGENERATOR._serialized_end=57679
  _SPGROUPINGSETS._serialized_start=57681
  _SPGROUPINGSETS._serialized_end=57760
  _SPMATCHEDCLAUSE._serialized_start=57763
  _SPMATCHEDCLAUSE._serialized_end=58050
  _SPMERGEDELETEWHENMATCHEDCLAUSE._serialized_start=58052
  _SPMERGEDELETEWHENMATCHEDCLAUSE._serialized_end=58145
  _SPMERGEINSERTWHENNOTMATCHEDCLAUSE._serialized_start=58148
  _SPMERGEINSERTWHENNOTMATCHEDCLAUSE._serialized_end=58320
  _SPMERGEUPDATEWHENMATCHEDCLAUSE._serialized_start=58323
  _SPMERGEUPDATEWHENMATCHEDCLAUSE._serialized_end=58464
  _SPNAMEREF._serialized_start=58466
  _SPNAMEREF._serialized_end=58535
  _SPRANGE._serialized_start=58538
  _SPRANGE._serialized_end=58678
  _SPREADAVRO._serialized_start=58680
  _SPREADAVRO._serialized_end=58777
  _SPREADCSV._serialized_start=58779
  _SPREADCSV._serialized_end=58875
  _SPREADJSON._serialized_start=58877
  _SPREADJSON._serialized_end=58974
  _SPREADORC._serialized_start=58976
  _SPREADORC._serialized_end=59072
  _SPREADPARQUET._serialized_start=59074
  _SPREADPARQUET._serialized_end=59174
  _SPREADTABLE._serialized_start=59176
  _SPREADTABLE._serialized_end=59290
  _SPREADXML._serialized_start=59292
  _SPREADXML._serialized_end=59388
  _SPRELATIONALGROUPEDDATAFRAMEAGG._serialized_start=59391
  _SPRELATIONALGROUPEDDATAFRAMEAGG._serialized_end=59547
  _SPRELATIONALGROUPEDDATAFRAMEAPPLYINPANDAS._serialized_start=59550
  _SPRELATIONALGROUPEDDATAFRAMEAPPLYINPANDAS._serialized_end=59796
  _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_start=59799
  _SPRELATIONALGROUPEDDATAFRAMEBUILTIN._serialized_end=59976
  _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start=59979
  _SPRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end=60612
  _SPRELATIONALGROUPEDDATAFRAMEPIVOT._serialized_start=60615
  _SPRELATIONALGROUPEDDATAFRAMEPIVOT._serialized_end=60841
  _SPRELATIONALGROUPEDDATAFRAMEREF._serialized_start=60843
  _SPRELATIONALGROUPEDDATAFRAMEREF._serialized_end=60931
  _SPROW._serialized_start=60933
  _SPROW._serialized_end=61027
  _SPSESSIONTABLEFUNCTION._serialized_start=61029
  _SPSESSIONTABLEFUNCTION._serialized_end=61107
  _SPSQL._serialized_start=61109
  _SPSQL._serialized_end=61189
  _SPTABLE._serialized_start=61192
  _SPTABLE._serialized_end=61335
  _SPTABLEDELETE._serialized_start=61338
  _SPTABLEDELETE._serialized_end=61543
  _SPTABLEDROPTABLE._serialized_start=61545
  _SPTABLEDROPTABLE._serialized_end=61618
  _SPTABLEFNCALLALIAS._serialized_start=61620
  _SPTABLEFNCALLALIAS._serialized_end=61730
  _SPTABLEFNCALLOVER._serialized_start=61733
  _SPTABLEFNCALLOVER._serialized_end=61869
  _SPTABLEMERGE._serialized_start=61872
  _SPTABLEMERGE._serialized_end=62115
  _SPTABLESAMPLE._serialized_start=62118
  _SPTABLESAMPLE._serialized_end=62398
  _SPTABLEUPDATE._serialized_start=62401
  _SPTABLEUPDATE._serialized_end=62651
  _SPTOSNOWPARKPANDAS._serialized_start=62654
  _SPTOSNOWPARKPANDAS._serialized_end=62811
  _SPWINDOWSPECEMPTY._serialized_start=62813
  _SPWINDOWSPECEMPTY._serialized_end=62899
  _SPWINDOWSPECEXPR._serialized_start=62902
  _SPWINDOWSPECEXPR._serialized_end=63257
  _SPWINDOWSPECORDERBY._serialized_start=63259
  _SPWINDOWSPECORDERBY._serialized_end=63372
  _SPWINDOWSPECPARTITIONBY._serialized_start=63374
  _SPWINDOWSPECPARTITIONBY._serialized_end=63491
  _SPWINDOWSPECRANGEBETWEEN._serialized_start=63494
  _SPWINDOWSPECRANGEBETWEEN._serialized_end=63677
  _SPWINDOWSPECROWSBETWEEN._serialized_start=63680
  _SPWINDOWSPECROWSBETWEEN._serialized_end=63862
  _SPWRITECOPYINTOLOCATION._serialized_start=63865
  _SPWRITECOPYINTOLOCATION._serialized_end=64292
  _SPWRITECSV._serialized_start=64295
  _SPWRITECSV._serialized_end=64597
  _SPWRITEFILE._serialized_start=64600
  _SPWRITEFILE._serialized_end=64826
  _SPWRITEJSON._serialized_start=64829
  _SPWRITEJSON._serialized_end=65132
  _SPWRITEPANDAS._serialized_start=65135
  _SPWRITEPANDAS._serialized_end=65517
  _SPWRITEPARQUET._serialized_start=65520
  _SPWRITEPARQUET._serialized_end=65826
  _SPWRITETABLE._serialized_start=65829
  _SPWRITETABLE._serialized_end=66494
  _STMT._serialized_start=66496
  _STMT._serialized_end=66617
  _STOREDPROCEDURE._serialized_start=66620
  _STOREDPROCEDURE._serialized_end=67304
  _STRINGVAL._serialized_start=67306
  _STRINGVAL._serialized_end=67359
  _SUB._serialized_start=67361
  _SUB._serialized_end=67445
  _TRUNCATEDDATAFRAMEEXPR._serialized_start=67447
  _TRUNCATEDDATAFRAMEEXPR._serialized_end=67528
  _TRUNCATEDEXPR._serialized_start=67530
  _TRUNCATEDEXPR._serialized_end=67602
  _TRUNCATEDRELATIONALGROUPEDDATAFRAMEEXPR._serialized_start=67604
  _TRUNCATEDRELATIONALGROUPEDDATAFRAMEEXPR._serialized_end=67702
  _TUPLEVAL._serialized_start=67704
  _TUPLEVAL._serialized_end=67768
  _UDAF._serialized_start=67771
  _UDAF._serialized_end=68377
  _UDF._serialized_start=68380
  _UDF._serialized_end=69066
  _UDTF._serialized_start=69069
  _UDTF._serialized_end=69679
  _UNARYOP._serialized_start=69681
  _UNARYOP._serialized_end=69751
# @@protoc_insertion_point(module_scope)
